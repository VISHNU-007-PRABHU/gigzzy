{"version":3,"sources":["component/Admin/Company/CompanyWorker_Table.js","component/Admin/Company/CompanyWorker.js"],"names":["CompanyWorkerTable","state","modalVisible","dataSource","update_data","update","loading","loading_img","imageUrl","file","previewVisible","previewImage","view_img","pagination","pageSize","total","current","simple","handleTableChange","_callee","pager","regenerator_default","a","wrap","_context","prev","next","Object","objectSpread2","_this","setState","client","query","GET_COMPANY","variables","limit","page","fetchPolicy","then","result","data","get_company_detail","pageInfo","totalDocs","stop","fetch_find_company","_callee2","datas","provider_search","_context2","register_status","register_link_status","props","$or","$ne","company_id","match","params","id","get_parent_company_provider","handleDelete","_callee3","_id","_context3","mutate","mutation","DELETE_COMPANY_PROVIDER","error","Alert_msg","deleteCompanyProvider","status","onFilter_Ref","_callee4","_context4","target","value","email","$regex","$options","this","_this2","columns","title","render","text","record","react","tag","color","created_at","length","className","roles_permission_view","permission","icon","type","theme","twoToneColor","popconfirm","onConfirm","Search_default","size","placeholder","onKeyUp","event","table","rowKey","React","Form","create","withRouter","TabPane","Layout","Content","Tabs","Company","collapsed","onToggle","val","console","log","react_default","createElement","tabs","tab","key","CompanyWorker_Table","Component"],"mappings":"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","file":"static/js/37.a30ecc74.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Table, Modal, Form, Avatar, Popconfirm, Tag, Icon, Switch } from \"antd\";\nimport { GET_COMPANY, DELETE_COMPANY_PROVIDER } from '../../../graphql/Admin/user';\nimport { client } from \"../../../apollo\";\nimport '../../../scss/template.scss';\nimport { Alert_msg } from '../../Comman/alert_msg';\nimport Search from \"antd/lib/input/Search\";\nimport RoleView, { RoleViewFunction } from '../../Comman/roles_permission_view'\nclass CompanyWorkerTable extends React.Component {\n    state = {\n        modalVisible: false,\n        dataSource: [],\n        update_data: {},\n        update: 0,\n        loading: false,\n        loading_img: false,\n        imageUrl: '',\n        file: {},\n        previewVisible: false,\n        previewImage: '',\n        view_img: '',\n        pagination: {\n            pageSize: 10,\n            total: 0,\n            current: 1,\n            simple: true,\n        },\n    }\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            this.fetch_find_company();\n        }\n    }\n    handleTableChange = async pagination => {\n        const pager = { ...pagination };\n        pager.current = pagination.current;\n        this.setState({ loading: true });\n        await client.query({\n            query: GET_COMPANY,\n            variables: { limit: pager.pageSize, page: pager.current },\n            fetchPolicy: 'no-cache',\n        }).then(result => {\n            const pagination = { ...this.state.pagination };\n            pagination.total = result.data.get_company_detail.pageInfo.totalDocs;\n            pagination.current = result.data.get_company_detail.pageInfo.page;\n            this.setState({ pagination, loading: false, dataSource: result.data.get_company_detail.data });\n        });\n    };\n\n    fetch_find_company = async (datas) => {\n        let provider_search = {\n            register_status: \"success\",\n            register_link_status: \"accepted\"\n        }\n        if (this.props['type'] === \"inactive\"){\n            provider_search = {\n                $or: [\n                    {\n                        register_link_status: { $ne: \"success\" }\n                    },\n                    {\n                        register_status: { $ne: \"accepted\" }\n                    }\n                ]\n            }\n        }\n        if(datas){\n            provider_search = {...provider_search,...datas}\n        }\n        await client.query({\n            query: GET_COMPANY,\n            variables: { company_id: this.props.match.params.id,provider_search },\n            fetchPolicy: 'no-cache',\n        }).then(result => {\n            this.setState({\n                update: 1,\n                dataSource: result.data.get_company_detail.data[0].get_parent_company_provider,\n            });\n        });\n    }\n\n\n    handleDelete = async (_id) => {\n        await client.mutate({\n            mutation: DELETE_COMPANY_PROVIDER,\n            variables: { _id: _id },\n        }).then((result, loading, error) => {\n            Alert_msg(result.data.deleteCompanyProvider);\n            if (result.data.deleteCompanyProvider.status === 'success') {\n                this.fetch_find_company();\n            }\n        });\n    }\n\n\n    onFilter_Ref = async (data) => {\n        if (data.target.value) {\n            var datas = { 'email': { $regex: '.*' + data.target.value + '.*', $options: 'i' } }\n            this.fetch_find_company(datas);\n        } else {\n            this.fetch_find_company();\n        }\n    }\n\n    render() {\n        const columns = [\n            {\n                title: 'Email',\n                render: (text, record) => {\n                    return <span title=\"Email\">{record.email}</span>;\n                }\n            },\n            {\n                title: 'Link Sent Date',\n                render: (text, record) => {\n                    return <span title=\"Link Sent Date\">{<Tag color=\"geekblue\">{record.created_at}</Tag>}</span>;\n                },\n            },\n            {\n                title: 'Register Link Status',\n                render: (text, record) => {\n                    return <span title=\"Register Link Status\">{<Tag color=\"geekblue\">{record.register_link_status}</Tag>}</span>;\n                },\n            },\n            {\n                title: 'Provider Register Status',\n                render: (text, record) => {\n                    return <span title=\"Provider Register Status\">{<Tag color=\"geekblue\">{record.register_status}</Tag>}</span>;\n                },\n            },\n            {\n                title: 'View',\n                render: (text, record) =>\n                    this.state.dataSource.length >= 1 ? (\n                        <span title=\"....\" className=\"d-flex justify-content-around\">\n                            <RoleView permission=\"\">\n                                <span className=\"cursor_point\">\n                                    <Icon type=\"eye\" theme=\"twoTone\" twoToneColor=\"#52c41a\"  className={this.props['type'] === \"inactive\" ? 'd-none':'mx-3 f_25'} />\n                                </span>\n                            </RoleView>\n                            \n                            <RoleView permission=\"\" >\n                                <Popconfirm title=\"Sure to delete this worker ?\" onConfirm={() => this.handleDelete(record._id)}>\n                                    <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#52c41a\" className='f_25' />\n                                </Popconfirm>\n                            </RoleView>\n                        </span>\n                    ) : null,\n            },\n        ];\n\n\n        return (\n            <React.Fragment>\n\n                <div className='mb-3'>\n                    <Search className='' size=\"large\" placeholder=\"Search Worker Email\" onKeyUp={(event) => { this.onFilter_Ref(event) }} loading={false} />\n\n                </div>\n                <div id=\"no-more-tables\">\n                    <Table\n                        className='table_shadow'\n                        rowKey={record => record.id}\n                        loading={this.state.loading}\n                        dataSource={this.state.dataSource}\n                        columns={columns}\n                        pagination={false}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Form.create()(withRouter(CompanyWorkerTable));","\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport '../../../scss/template.scss';\nimport AdminSider from '../Layout/AdminSider';\nimport AdminHeader from '../Layout/AdminHeader';\nimport CompanyWorkerTable from './CompanyWorker_Table'\nimport { Layout, Tabs, Button } from 'antd';\nimport RoleView, { RoleViewFunction } from '../../Comman/roles_permission_view'\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\nclass Company extends React.Component {\n    state = {\n        collapsed: false,\n    };\n\n    onToggle = (val) => {\n        console.log(val);\n        this.setState({\n            collapsed: val,\n        });\n    };\n\n    render() {\n\n        return (\n            <Tabs>\n                <TabPane tab=\"Active workers\" key=\"1\">\n                    <CompanyWorkerTable type=\"active\" />\n                </TabPane>\n                <TabPane tab=\"Pending workers\" key=\"2\">\n                    <CompanyWorkerTable type=\"inactive\" />\n                </TabPane>\n            </Tabs>\n        );\n    }\n}\n\n\nexport default Company;\n"],"sourceRoot":""}