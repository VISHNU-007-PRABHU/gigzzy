{"version":3,"sources":["graphql/User/contract.js","image/sac.png","component/User/HomePage/ChooseJobCategory.js"],"names":["UPDATE_CONTRACT","gql","_templateObject","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","UPDATE_CONTRACT_FILE","_templateObject2","DELETE_CONTRACT_FILE","_templateObject3","GET_CONTRACT_FILES","_templateObject4","GET_CONTRACT","_templateObject5","module","exports","__webpack_require__","p","content_data","ChooseJobCategory","props","_useMutation","useMutation","_useMutation2","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","update_contract","datas","loading","useContext","HomeContext","console","log","history","useReactRouter","gopage","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","pagetype","input_data","final_data","wrap","_context","prev","next","localStorage","getItem","JSON","parse","_id","budget","category_id","current_id","category_type","comman_data","state","type","variables","sent","data","status","push","pathname","concat","Alert_msg","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","antd__WEBPACK_IMPORTED_MODULE_4__","gutter","antd__WEBPACK_IMPORTED_MODULE_5__","span","className","antd__WEBPACK_IMPORTED_MODULE_6__","onClick"],"mappings":"mSAEaA,EAAkBC,IAAHC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,8MAWfE,EAAuBJ,IAAHK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,qTASpBI,EAAuBN,IAAHO,MAAAL,OAAAC,EAAA,EAAAD,CAAA,sJASpBM,EAAqBR,IAAHS,MAAAP,OAAAC,EAAA,EAAAD,CAAA,kSAclBQ,EAAeV,IAAHW,MAAAT,OAAAC,EAAA,EAAAD,CAAA,8nEC7CzBU,EAAAC,QAAiBC,EAAAC,EAAuB,uNCSlCC,EACK,wBADLA,EAEK,YAFLA,EAGK,kBAiFIC,UA9EW,SAACC,GACvB,IAAAC,EAAsDC,YAAYrB,KAAlEsB,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,GAAOI,EAAPF,EAAA,GACMG,GADNH,EAAA,GAA0BI,QACZC,qBAAWC,MACzBC,QAAQC,IAAI,mCAAoCL,GAChD,IAAQM,EAAYC,MAAZD,QACFE,EAAM,eAAAC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAiC,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXjB,QAAQC,IAAIX,GACK,aAAbqB,EAFO,CAAAI,EAAAE,KAAA,gBAGHL,EAAa,GACbM,aAAaC,QAAQ,UACrBP,EAAU,QAAcQ,KAAKC,MAAMH,aAAaC,QAAQ,SAASG,KAErEV,EAAU,cAAmB,GAC7BA,EAAU,IAAS,EACnBA,EAAU,IAAS,EACnBA,EAAU,cAAkB,EAC5BA,EAAU,cAAmB,CAC7B,CACIW,OAAO,EACPC,YAAYlC,EAAMmC,WAClBC,cAAcpC,EAAMqC,YAAYC,MAAMC,OAEtCX,aAAaC,QAAQ,aAAwD,oBAAlCD,aAAaC,QAAQ,aAA8D,aAAlCD,aAAaC,QAAQ,YACjHP,EAAU,oBAA0BM,aAAaC,QAAQ,YAIzDP,EAAU,oBAA0B,KAtBjCG,EAAAE,KAAA,GAyBgBtB,EAAgB,CAAEmC,UAAWlB,IAzB7C,QA0BwC,aAD3CC,EAzBGE,EAAAgB,MA0BQC,KAAKrC,gBAAgBsC,OAChC/B,EAAQgC,KAAK,CAAEC,SAAQ,qBAAAC,OAAuBvB,EAAWmB,KAAKrC,gBAAgB2B,OAI9Ee,YAAUxB,EAAWmB,KAAKrC,iBA/BvBoB,EAAAE,KAAA,iBAkCPf,EAAQgC,KAAK5C,EAAMqC,aAlCZ,yBAAAZ,EAAAuB,SAAA5B,MAAH,gBAAA6B,GAAA,OAAAlC,EAAAmC,MAAAC,KAAAC,YAAA,GAsCZ,OACIC,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAAqC,SAAA,KACIF,EAAAnC,EAAAoC,cAACE,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,KACdJ,EAAAnC,EAAAoC,cAACI,EAAA,EAAD,CAAKC,KAAM,IACPN,EAAAnC,EAAAoC,cAAA,OAAKM,UAAU,gEAAgE9D,KAGvFuD,EAAAnC,EAAAoC,cAACE,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,KACdJ,EAAAnC,EAAAoC,cAACI,EAAA,EAAD,CAAKC,KAAM,IACPN,EAAAnC,EAAAoC,cAAA,OAAKM,UAAU,gEACXP,EAAAnC,EAAAoC,cAACO,EAAA,EAAD,CAAQtB,KAAK,UAAUqB,UAAU,OAAOE,QAAS,WAAQhD,EAAO,gBAC5DuC,EAAAnC,EAAAoC,cAAA,WAAMxD,OAKtBuD,EAAAnC,EAAAoC,cAACE,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,KACdJ,EAAAnC,EAAAoC,cAACI,EAAA,EAAD,CAAKC,KAAM,IACPN,EAAAnC,EAAAoC,cAAA,OAAKM,UAAU,gEAAf,QAKRP,EAAAnC,EAAAoC,cAACE,EAAA,EAAD,KACIH,EAAAnC,EAAAoC,cAACI,EAAA,EAAD,CAAKC,KAAM,IACPN,EAAAnC,EAAAoC,cAAA,OAAKM,UAAU,gEACXP,EAAAnC,EAAAoC,cAACO,EAAA,EAAD,CAAQtB,KAAK,UAAUqB,UAAU,OAAOE,QAAS,WAAQhD,EAAO,cAC5DuC,EAAAnC,EAAAoC,cAAA,WAAMxD","file":"static/js/25.9631fa18.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const UPDATE_CONTRACT = gql`\n    mutation UPDATECONTRACT($_id:ID,$contract_data:JSON){\n        update_contract(_id:$_id,contract_data:$contract_data){\n            msg\n            status\n            _id\n        }\n    }\n`\n\n\nexport const UPDATE_CONTRACT_FILE = gql`\n    mutation UPDATECONTRACTFILE($contract_id:ID,$file:[Upload],$category:String,$image_tag:String,$_id:ID){\n        ContractJobFileUpload(contract_id:$contract_id,file:$file,category:$category,image_tag:$image_tag,_id:$_id){\n            msg\n            status\n            _id\n        }\n    }\n`\nexport const DELETE_CONTRACT_FILE = gql`\n    mutation DELETECONTRACTFILE($_id:ID){\n        DeleteContractJobFile(_id:$_id){\n            msg\n            status\n        }\n    }\n`\n\nexport const GET_CONTRACT_FILES = gql`\n    query GETCONTRACTFILES($contract_id:ID){\n        get_contract_files(contract_id:$contract_id) {\n            _id\n            images{\n                small_image\n                image_tag\n                doc_category\n                _id\n            }\n        }\n    }\n`\n\nexport const GET_CONTRACT = gql`\n    query GETCONTRACT($contract_id:ID,$location_code:String){\n        get_contracts(contract_id:$contract_id,location_code:$location_code){\n            name\n            description\n            current_page\n            address_id\n            booking_status\n            budget(code:$location_code)\n            timeline\n            biding_id\n            timeline_type\n            terms_condition\n            contract_ref\n            biding_count\n            created_at\n            currenct_milestone_id\n            currenct_milestone_status\n            ctob_billRef\n            ctob_shotcode\n            ctob\n            get_contract_category{\n                category_name\n                subCategory_name\n                category_type\n            }\n            get_contract_all_files(contract_id:$contract_id){\n                small_image\n            }\n            get_contract_files(contract_id:$contract_id) {\n                _id\n                images{\n                    small_image\n                    large_image\n                    image_tag\n                }\n            }\n            get_provider_user {\n                img_url\n                first_name\n                email\n                phone_no\n                user_type\n                last_name\n                _id\n                get_company_root_detail(root: true) {\n                    company_name\n                    company_website\n                    company_category\n                    get_company_images {\n                    small_image\n                    }\n                }\n            }\n            get_user {\n                img_url\n                first_name\n                user_type\n                last_name\n                email\n                phone_no\n                _id\n                get_company_root_detail(root: true) {\n                    company_name\n                    company_website\n                    company_category\n                    get_company_images {\n                        small_image\n                    }\n                }\n            }\n        }\n    }\n`\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/sac.27ec6dac.png\";","import React, { useState ,useMemo,useContext} from 'react'\nimport { Row, Col, Icon, Button, Input } from 'antd';\nimport main from '../../../image/sac.png';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport useReactRouter from 'use-react-router';\nimport { Alert_msg } from \"../../Comman/alert_msg\";\nimport {HomeContext} from '../../context/Location';\nimport { UPDATE_CONTRACT, GET_CONTRACT } from '../../../graphql/User/contract';\n\nconst content_data = {\n    data1: \"Tell us what you need\",\n    data2: \"ON-DEMAND\",\n    data3: \"Post a contract\",\n\n}\nconst ChooseJobCategory = (props) => {\n    const [update_contract, { loading: removeLoading }] = useMutation(UPDATE_CONTRACT)\n    const datas = useContext(HomeContext);\n    console.log(\"ChooseJobCategory -> comman_data\", datas)\n    const { history } = useReactRouter();\n    const gopage = async(pagetype) => {\n        console.log(props)\n        if (pagetype === \"contract\") {\n            var input_data = {}\n            if (localStorage.getItem('user')) {\n                input_data[\"user_id\"] = JSON.parse(localStorage.getItem(\"user\"))._id\n            }\n            input_data['location_code']= \"\"\n            input_data['lat']= 0.0\n            input_data['lng']= 0.0\n            input_data['current_page']=-1\n            input_data['contract_data']= [\n            {\n                budget:0,\n                category_id:props.current_id,\n                category_type:props.comman_data.state.type\n            }]\n            if (localStorage.getItem('currency') && typeof localStorage.getItem('currency')!=\"undefined\" && localStorage.getItem('currency')!=\"undefined\") {\n                input_data[\"local_location_code\"] = localStorage.getItem('currency'); \n            }\n            else\n            {\n                input_data[\"local_location_code\"] = \"IN\"; \n            }\n            \n            let final_data = await update_contract({ variables: input_data });\n            if (final_data.data.update_contract.status === \"success\") {\n                history.push({ pathname: `/contract_booking/${final_data.data.update_contract._id}` })\n            }\n            else\n            {\n                Alert_msg(final_data.data.update_contract)\n            }\n        } else {\n            history.push(props.comman_data);\n        }\n    }\n\n    return (\n        <>\n            <Row gutter={[16, 40]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">{content_data['data1']}</div>\n                </Col>\n            </Row>\n            <Row gutter={[16, 32]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className='w-50' onClick={() => { gopage(\"individual\") }}>\n                            <div>{content_data['data2']}</div>\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n            <Row gutter={[16, 32]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        or\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className='w-50' onClick={() => { gopage(\"contract\") }}>\n                            <div>{content_data['data3']}</div>\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    )\n}\nexport default ChooseJobCategory;\n"],"sourceRoot":""}