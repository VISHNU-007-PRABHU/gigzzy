{"version":3,"sources":["component/Admin/Roles/AdminPermission.js"],"names":["Option","Typography","Title","Select","Panel","Collapse","AdminPermission","state","visible","visibleAddPermission","dataSource","pagination","pageSize","current","total","simple","items","permission","name","input_new_type","fetch_permission","a","setState","loading","client","query","GET_ADMIN_PERMISSION","variables","limit","page","fetchPolicy","then","result","data","get_admin_permission","pageInfo","totalDocs","showDrawer","showModal","onClose","props","closePermission","handleDelete","_id","console","log","mutate","mutation","DELETE_ADMIN_PERMISSION","error","Alert_msg","delete_admin_permission","status","add_new_permission","form","history","validateFields","err","values","ADD_ADMIN_PERMISSION","type","key","add_admin_permission","this","resetFields","nextProps","active","title","onClick","width","bodyStyle","paddingBottom","footer","style","textAlign","marginRight","className","accordion","map","main_permission","i","header","count","sub_permission","onConfirm","theme","twoToneColor","onOk","onCancel","Item","label","getFieldDecorator","initialValue","rules","required","message","onChange","placeholder","React","Component","Form","create","withRouter"],"mappings":"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","file":"static/js/43.4a968ddb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Drawer from 'antd/es/drawer';\r\nimport Select from 'antd/es/select';\r\nimport Button from 'antd/es/button';\r\nimport Collapse from 'antd/es/collapse';\r\nimport Typography from 'antd/es/typography';\r\nimport Popconfirm from 'antd/es/popconfirm';\r\nimport Badge from 'antd/es/badge';\r\nimport Input from 'antd/es/input';\r\nimport Row from 'antd/es/row';\r\nimport Checkbox from 'antd/es/checkbox';\r\nimport Icon from 'antd/es/icon';\r\nimport Modal from 'antd/es/modal';\r\nimport Form from 'antd/es/form';\r\nimport { client } from \"../../../apollo\";\r\nimport { Alert_msg } from '../../Comman/alert_msg';\r\nimport { DELETE_ADMIN_PERMISSION, GET_FETCH_ADMIN_PERMISSION, GET_ADMIN_PERMISSION, ADD_ADMIN_PERMISSION } from '../../../graphql/Admin/roles';\r\nimport RoleView, { RoleViewFunction } from '../../Comman/roles_permission_view'\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\nlet index = 0;\r\nclass AdminPermission extends React.Component {\r\n    state = {\r\n        visible: false,\r\n        visibleAddPermission: false,\r\n        dataSource: [],\r\n        pagination: {\r\n            pageSize: 10,\r\n            current: 1,\r\n            total: 0,\r\n            simple: true,\r\n        },\r\n        items: ['jack', 'lucy'],\r\n        permission: [],\r\n        name: '',\r\n        input_new_type: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { form } = this.props;\r\n        form.resetFields();\r\n        this.fetch_permission();\r\n    }\r\n\r\n    fetch_permission = async (visible) => {\r\n        this.setState({ loading: true });\r\n\r\n        await client.query({\r\n            query: GET_ADMIN_PERMISSION,\r\n            variables: { limit: this.state.pagination.pageSize, page: this.state.pagination.current },\r\n            fetchPolicy: 'no-cache',\r\n        }).then(result => {\r\n            const pagination = { ...this.state.pagination };\r\n            pagination.total = result.data.get_admin_permission.pageInfo.totalDocs;\r\n            this.setState({\r\n                loading: false,\r\n                pagination,\r\n                permission: result.data.get_admin_permission.data,\r\n                dataSource: result.data.get_admin_permission.data\r\n            });\r\n        });\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleAddPermission: true,\r\n        });\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n        this.props.closePermission()\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.active !== this.state.active) {\r\n            this.setState({ visible: nextProps.active });\r\n        }\r\n    }\r\n    handleDelete = async (_id) => {\r\n        console.log(_id);\r\n        await client.mutate({\r\n            mutation: DELETE_ADMIN_PERMISSION,\r\n            variables: { _id: _id },\r\n        }).then((result, loading, error) => {\r\n            Alert_msg(result.data.delete_admin_permission);\r\n            if (result.data.delete_admin_permission.status === 'success') {\r\n                this.fetch_permission();\r\n            }\r\n        });\r\n    }\r\n\r\n    add_new_permission = async () => {\r\n        const { form, history } = this.props;\r\n        form.validateFields(async (err, values) => {\r\n            await client.mutate({\r\n                mutation: ADD_ADMIN_PERMISSION,\r\n                variables: { type: values['input_new_type'] ? values['add_new_type'] : values['type'], name: values['name'], key: values['key'] },\r\n            }).then(async (result, loading, error) => {\r\n                Alert_msg(result.data.add_admin_permission);\r\n                if (result.data.add_admin_permission.status === 'success') {\r\n                    this.fetch_permission();\r\n                    await this.setState({ visibleAddPermission: false })\r\n                }\r\n            });\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const { form } = this.props;\r\n        return (\r\n            <>\r\n                <Drawer\r\n                    title={<><div>\r\n                        <RoleView permission=\"add_permission\">\r\n                            <Button type=\"primary\" onClick={this.showModal}>\r\n                                Create a new permission\r\n                            </Button>\r\n                        </RoleView>\r\n                    </div></>}\r\n                    width={500}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{ paddingBottom: 80 }}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.onClose} type=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <div className=\"p-3\">\r\n                        <Collapse accordion >\r\n                            {this.state.dataSource.map((main_permission, i) => (\r\n                                <Panel key={i} header={<div className=\"d-flex justify-content-between\">\r\n                                    <div>{main_permission['_id']}</div>\r\n                                    <Badge count={main_permission['count'] ? main_permission['count'] : 0} />\r\n                                </div>} >\r\n                                    {main_permission['permission'].map(sub_permission => {\r\n                                        return (<div className=\"d-flex jumbotron p-1 my-2 justify-content-between align-items-center\">\r\n                                            <div>\r\n                                                <div className=\"bold\">{sub_permission['name']}</div>\r\n                                                <div>{sub_permission['key']}</div>\r\n                                            </div>\r\n                                            <RoleView permission=\"delete_permission\">\r\n                                                <div>\r\n                                                    <Popconfirm title=\"Sure to delete this permission ?\" onConfirm={() => this.handleDelete(sub_permission['_id'])}>\r\n                                                        <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#52c41a\" className='f_25' />\r\n                                                    </Popconfirm>\r\n                                                </div>\r\n                                            </RoleView>\r\n                                        </div>)\r\n                                    })}\r\n                                </Panel>\r\n                            ))}\r\n                        </Collapse>\r\n                    </div>\r\n                </Drawer>\r\n                <Modal\r\n                    title=\"Add new permission\"\r\n                    visible={this.state.visibleAddPermission}\r\n                    onOk={this.add_new_permission}\r\n                    onCancel={() => { this.setState({ visibleAddPermission: false }) }}\r\n                >\r\n\r\n                    <Form.Item label=\"Input Permission Type\">\r\n                        {form.getFieldDecorator(\"input_new_type\", {\r\n                            initialValue: this.state.input_new_type,\r\n                            rules: [{ required: false, message: 'Permission type is required' }]\r\n                        })(<Checkbox onChange={() => { this.setState({ input_new_type: !this.state.input_new_type }) }}>Are you create new permission type</Checkbox>)}\r\n                    </Form.Item>\r\n                    <Form.Item className={this.state.input_new_type ? '' : 'd-none'} label=\"Permission Type\">\r\n                        {form.getFieldDecorator(\"add_new_type\", {\r\n                            rules: [{ required: this.state.input_new_type, message: 'Permission type is required' }]\r\n                        })(<Input placeholder=\"Enter your new permission\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item className={this.state.input_new_type ? 'd-none' : ''} label=\"Permission type\">\r\n                        {form.getFieldDecorator(\"type\", {\r\n                            // initialValue: this.state.permission,\r\n                            rules: [{ required: !this.state.input_new_type, message: 'Permission type is required' }]\r\n                        })(<Select style={{ width: '100%' }} placeholder=\"Permission type\">\r\n                            {this.state.permission.map(data =>\r\n                                <Option key={data._id}>{data._id}</Option>\r\n                            )}\r\n                        </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Permission Name\">\r\n                        {form.getFieldDecorator(\"name\", {\r\n                            initialValue: this.state.name,\r\n                            rules: [{ required: true, message: 'Permission name is required' }]\r\n                        })(<Input placeholder=\"Permission Name\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Permission Key\">\r\n                        {form.getFieldDecorator(\"key\", {\r\n                            initialValue: this.state.key,\r\n                            rules: [{ required: true, message: 'Permission key is required' }]\r\n                        })(<Input placeholder=\"Permission Key\" />)}\r\n                    </Form.Item>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(withRouter(AdminPermission));"],"sourceRoot":""}