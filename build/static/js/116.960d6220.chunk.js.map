{"version":3,"sources":["image/sac.png","component/User/HomePage/ChooseJobCategory.js","../node_modules/enquire.js/src/Util.js","../node_modules/enquire.js/src/index.js","../node_modules/enquire.js/src/MediaQueryDispatch.js","../node_modules/enquire.js/src/MediaQuery.js","../node_modules/enquire.js/src/QueryHandler.js","component/Comman/alert_msg.js","../node_modules/rc-util/es/createChainedFunction.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","use_react_router__WEBPACK_IMPORTED_MODULE_5__","use_react_router__WEBPACK_IMPORTED_MODULE_5___default","_context_Location__WEBPACK_IMPORTED_MODULE_7__","content_data","ChooseJobCategory","props","datas","useContext","HomeContext","console","log","history","useReactRouter","gopage","pagetype","localStorage","removeItem","push","pathname","concat","current_id","comman_data","a","createElement","Fragment","gutter","span","className","type","onClick","isFunction","target","isArray","Object","prototype","toString","apply","each","collection","fn","i","length","MediaQueryDispatch","MediaQuery","Util","window","matchMedia","Error","this","queries","browserIsIncapable","matches","constructor","register","q","options","shouldDegrade","isUnconditional","match","handler","addHandler","unregister","query","removeHandler","clear","QueryHandler","handlers","mql","self","listener","currentTarget","assess","addListener","constuctor","qh","on","h","equals","destroy","splice","removeListener","action","deferSetup","setup","initialised","off","unmatch","d","Alert_msg","antd__WEBPACK_IMPORTED_MODULE_0__","data","status","message","loading","then","success","msg","error","createChainedFunction","args","slice","call","arguments"],"mappings":"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","file":"static/js/116.960d6220.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sac.27ec6dac.png\";","import React, { useState ,useMemo,useContext} from 'react'\nimport { Row, Col, Icon, Button, Input } from 'antd';\nimport main from '../../../image/sac.png';\nimport useReactRouter from 'use-react-router';\nimport { Alert_msg } from \"../../Comman/alert_msg\";\nimport {HomeContext} from '../../context/Location'\nconst content_data = {\n    data1: \"Tell us what you need\",\n    data2: \"ON-DEMAND\",\n    data3: \"Post a contract\",\n\n}\nconst ChooseJobCategory = (props) => {\n    const datas = useContext(HomeContext);\n    console.log(\"ChooseJobCategory -> comman_data\", datas)\n    const { history } = useReactRouter();\n    // const value = useMemo(() => (\n    //     console.log(\"ChooseJobCategory -> comman_data\", comman_data)\n    // ), [comman_data]);\n\n    const gopage = (pagetype) => {\n        console.log(props)\n        if (pagetype === \"contract\") {\n            localStorage.removeItem('current_contract_id')\n            history.push({ pathname: `/contract_booking/${props.current_id}` })\n        } else {\n            history.push(props.comman_data);\n        }\n    }\n\n    return (\n        <>\n            <Row gutter={[16, 40]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">{content_data['data1']}</div>\n                </Col>\n            </Row>\n            <Row gutter={[16, 32]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className='w-50' onClick={() => { gopage(\"individual\") }}>\n                            <div>{content_data['data2']}</div>\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n            <Row gutter={[16, 32]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        or\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className='w-50' onClick={() => { gopage(\"contract\") }}>\n                            <div>{content_data['data3']}</div>\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    )\n}\nexport default ChooseJobCategory;\n","/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n  var i = 0,\n      length = collection.length,\n      cont;\n\n  for (i; i < length; i++) {\n    cont = fn(collection[i], i);\n\n    if (cont === false) {\n      break; //allow early exit\n    }\n  }\n}\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\n\n\nfunction isArray(target) {\n  return Object.prototype.toString.apply(target) === '[object Array]';\n}\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\n\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n\nmodule.exports = {\n  isFunction: isFunction,\n  isArray: isArray,\n  each: each\n};","var MediaQueryDispatch = require('./MediaQueryDispatch');\n\nmodule.exports = new MediaQueryDispatch();","var MediaQuery = require('./MediaQuery');\n\nvar Util = require('./Util');\n\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\n\nfunction MediaQueryDispatch() {\n  if (!window.matchMedia) {\n    throw new Error('matchMedia not present, legacy browsers require a polyfill');\n  }\n\n  this.queries = {};\n  this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n  constructor: MediaQueryDispatch,\n\n  /**\n   * Registers a handler for the given media query\n   *\n   * @param {string} q the media query\n   * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n   * @param {function} options.match fired when query matched\n   * @param {function} [options.unmatch] fired when a query is no longer matched\n   * @param {function} [options.setup] fired when handler first triggered\n   * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n   * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n   */\n  register: function register(q, options, shouldDegrade) {\n    var queries = this.queries,\n        isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n    if (!queries[q]) {\n      queries[q] = new MediaQuery(q, isUnconditional);\n    } //normalise to object in an array\n\n\n    if (isFunction(options)) {\n      options = {\n        match: options\n      };\n    }\n\n    if (!isArray(options)) {\n      options = [options];\n    }\n\n    each(options, function (handler) {\n      if (isFunction(handler)) {\n        handler = {\n          match: handler\n        };\n      }\n\n      queries[q].addHandler(handler);\n    });\n    return this;\n  },\n\n  /**\n   * unregisters a query and all it's handlers, or a specific handler for a query\n   *\n   * @param {string} q the media query to target\n   * @param {object || function} [handler] specific handler to unregister\n   */\n  unregister: function unregister(q, handler) {\n    var query = this.queries[q];\n\n    if (query) {\n      if (handler) {\n        query.removeHandler(handler);\n      } else {\n        query.clear();\n        delete this.queries[q];\n      }\n    }\n\n    return this;\n  }\n};\nmodule.exports = MediaQueryDispatch;","var QueryHandler = require('./QueryHandler');\n\nvar each = require('./Util').each;\n/**\n * Represents a single media query, manages it's state and registered handlers for this query\n *\n * @constructor\n * @param {string} query the media query string\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n */\n\n\nfunction MediaQuery(query, isUnconditional) {\n  this.query = query;\n  this.isUnconditional = isUnconditional;\n  this.handlers = [];\n  this.mql = window.matchMedia(query);\n  var self = this;\n\n  this.listener = function (mql) {\n    // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\n    self.mql = mql.currentTarget || mql;\n    self.assess();\n  };\n\n  this.mql.addListener(this.listener);\n}\n\nMediaQuery.prototype = {\n  constuctor: MediaQuery,\n\n  /**\n   * add a handler for this query, triggering if already active\n   *\n   * @param {object} handler\n   * @param {function} handler.match callback for when query is activated\n   * @param {function} [handler.unmatch] callback for when query is deactivated\n   * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n   * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n   */\n  addHandler: function addHandler(handler) {\n    var qh = new QueryHandler(handler);\n    this.handlers.push(qh);\n    this.matches() && qh.on();\n  },\n\n  /**\n   * removes the given handler from the collection, and calls it's destroy methods\n   *\n   * @param {object || function} handler the handler to remove\n   */\n  removeHandler: function removeHandler(handler) {\n    var handlers = this.handlers;\n    each(handlers, function (h, i) {\n      if (h.equals(handler)) {\n        h.destroy();\n        return !handlers.splice(i, 1); //remove from array and exit each early\n      }\n    });\n  },\n\n  /**\n   * Determine whether the media query should be considered a match\n   *\n   * @return {Boolean} true if media query can be considered a match, false otherwise\n   */\n  matches: function matches() {\n    return this.mql.matches || this.isUnconditional;\n  },\n\n  /**\n   * Clears all handlers and unbinds events\n   */\n  clear: function clear() {\n    each(this.handlers, function (handler) {\n      handler.destroy();\n    });\n    this.mql.removeListener(this.listener);\n    this.handlers.length = 0; //clear array\n  },\n\n  /*\n      * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n      */\n  assess: function assess() {\n    var action = this.matches() ? 'on' : 'off';\n    each(this.handlers, function (handler) {\n      handler[action]();\n    });\n  }\n};\nmodule.exports = MediaQuery;","/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n  this.options = options;\n  !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n  constructor: QueryHandler,\n\n  /**\n   * coordinates setup of the handler\n   *\n   * @function\n   */\n  setup: function setup() {\n    if (this.options.setup) {\n      this.options.setup();\n    }\n\n    this.initialised = true;\n  },\n\n  /**\n   * coordinates setup and triggering of the handler\n   *\n   * @function\n   */\n  on: function on() {\n    !this.initialised && this.setup();\n    this.options.match && this.options.match();\n  },\n\n  /**\n   * coordinates the unmatch event for the handler\n   *\n   * @function\n   */\n  off: function off() {\n    this.options.unmatch && this.options.unmatch();\n  },\n\n  /**\n   * called when a handler is to be destroyed.\n   * delegates to the destroy or unmatch callbacks, depending on availability.\n   *\n   * @function\n   */\n  destroy: function destroy() {\n    this.options.destroy ? this.options.destroy() : this.off();\n  },\n\n  /**\n   * determines equality by reference.\n   * if object is supplied compare options, if function, compare match callback\n   *\n   * @function\n   * @param {object || function} [target] the target for comparison\n   */\n  equals: function equals(target) {\n    return this.options === target || this.options.match === target;\n  }\n};\nmodule.exports = QueryHandler;","import { message } from 'antd';\nexport const Alert_msg = (data) => {\n  if (data.status && data.status === 'success') {\n    return (message.loading('Please Wait ....', 1).then(() => message.success(data.msg, [1])));\n  } else {\n    return (message.loading('Please Wait ....', 1).then(() => message.error(data.msg, [1])));\n  }\n};","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  var args = [].slice.call(arguments, 0);\n\n  if (args.length === 1) {\n    return args[0];\n  }\n\n  return function chainedFunction() {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i] && args[i].apply) {\n        args[i].apply(this, arguments);\n      }\n    }\n  };\n}"],"sourceRoot":""}