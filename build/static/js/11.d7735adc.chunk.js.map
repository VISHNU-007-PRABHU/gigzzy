{"version":3,"sources":["component/Comman/FileUpload.js"],"names":["FileUpload","props","useHistory","useState","img_url","setimg_url","fileList","set_fileList","fileList_status","setfileList_status","set_show_images","set_set_show_images","custom_class","setcustom_class","loading","setloading","setcontent","subcontent","setsubcontent","form","useEffect","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","a","file","status","category_data","custom_category","onFileUpload","originFileObj","imageUrl","uploadButton","type","className","name","accept","listType","action","showUploadList","beforeUpload","isJpgOrPng","message","error","isLt2M","size","onChange","e","src","alt","style","width"],"mappings":"wMAgHeA,UApGI,SAACC,GACFC,uBAAd,IACA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA+CN,oBAAS,GAAxD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAwCR,mBAAS,2BAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAkCV,mBAAS,IAA3C,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA8BZ,mBAAS,UAAvC,mBAAgBa,GAAhB,WACA,EAAoCb,mBAAS,IAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACiBjB,EAATkB,KACRC,qBAAU,WACFnB,EAAK,cACLY,EAAgBZ,EAAK,cAErBA,EAAK,gBACLe,EAAWf,EAAK,gBAEhBA,EAAK,oBACLiB,EAAcjB,EAAK,oBAEpBA,EAAK,iBACJU,EAAoBV,EAAK,iBAE1BA,EAAK,iBACJQ,EAAmBR,EAAK,mBAE7B,CAACA,IACJ,IAAMoB,EAAY,SAACC,EAAKC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAcN,IAsBnBO,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sDACjBhB,GAAW,GACPe,EAAKE,KAAKC,SACNC,GAAqB,OAALjC,QAAK,IAALA,OAAA,EAAAA,EAAOkC,kBAAoB,SAC/ClC,EAAMmC,aAAaN,EAAKE,KAAKK,cAAcH,GACxC1B,GACCD,EAAauB,EAAKxB,UAEtBe,EAAUS,EAAKE,KAAKK,eAAe,SAAAC,GAC5B5B,GACCL,EAAWiC,GAEfvB,GAAW,OAZF,2CAAH,sDAiBZwB,EACF,6BACI,kBAAC,IAAD,CAAMC,KAAM1B,EAAU,UAAY,OAAQ2B,UAAU,KACpD,yBAAKA,UAAU,mBAEX,6BAAMxB,KAKlB,OACI,oCACI,kBAAC,IAAD,CACIyB,KAAK,SACLC,OAAO,OACPC,SAAS,eACTH,UAAW7B,EACXN,SAAUE,GAAmBF,EAC7BuC,OAAO,mDACPC,gBAAgB,EAChBC,aAjDS,SAACf,GAClB,IAAMgB,EAA2B,eAAdhB,EAAKQ,MAAuC,cAAdR,EAAKQ,KACjDQ,GACDC,IAAQC,MAAM,qCAElB,IAAMC,EAASnB,EAAKoB,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACDF,IAAQC,MAAM,gCAEXF,GAAcG,GAyCbE,SAAU,SAACC,GAAKzB,EAAayB,KAE5BlD,EAAU,yBAAKmD,IAAKnD,EAASoD,IAAI,SAASC,MAAO,CAAEC,MAAO,SAAcnB","file":"static/js/11.d7735adc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form, Input, Icon, Upload } from 'antd';\r\nimport message from 'antd/lib/message';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst content_data = {\r\n    data1: \"JOIN AS COMPANY\",\r\n    data2: \"BACK\",\r\n    data3: \"NEXT\",\r\n}\r\n\r\n\r\nconst FileUpload = (props) => {\r\n    let history = useHistory();\r\n    const [img_url, setimg_url] = useState(\"\");\r\n    const [fileList, set_fileList] = useState([]);\r\n    const [fileList_status, setfileList_status] = useState(false);\r\n    const [set_show_images, set_set_show_images] = useState(false);\r\n    const [custom_class, setcustom_class] = useState(\"avatar-uploader d-flex \");\r\n    const [user_data, setuser_data] = useState(\"\");\r\n    const [loading, setloading] = useState(false);\r\n    const [content, setcontent] = useState(\"Upload\");\r\n    const [subcontent, setsubcontent] = useState(\"\");\r\n    const { form } = props;\r\n    useEffect(() => {\r\n        if (props['custom_class']) {\r\n            setcustom_class(props['custom_class'])\r\n        }\r\n        if (props['custom_content']) {\r\n            setcontent(props['custom_content'])\r\n        }\r\n        if (props['custom_sub_content']) {\r\n            setsubcontent(props['custom_sub_content'])\r\n        }\r\n        if(props['set_show_images']){\r\n            set_set_show_images(props['set_show_images'])\r\n        }\r\n        if(props['fileList_status']){\r\n            setfileList_status(props['fileList_status'])\r\n        }\r\n    }, [props])\r\n    const getBase64 = (img, callback) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    const normFile = e => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    const beforeUpload = (file) => {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n    const handleChange = async info => {\r\n        setloading(true);\r\n        if (info.file.status) {\r\n            let category_data = props?.custom_category ||  \"others\"\r\n            props.onFileUpload(info.file.originFileObj,category_data)\r\n            if(fileList_status){\r\n                set_fileList(info.fileList)\r\n            }\r\n            getBase64(info.file.originFileObj, imageUrl => {\r\n                if(set_show_images){\r\n                    setimg_url(imageUrl)\r\n                }\r\n                setloading(false)\r\n            });\r\n        }\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <Icon type={loading ? 'loading' : 'plus'} className=\"\" />\r\n            <div className=\"ant-upload-text\">\r\n                {/* <div className=\"bold normal_font_size\">{content}</div> */}\r\n                <div>{subcontent}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Upload\r\n                name=\"avatar\"\r\n                accept=\".png\"\r\n                listType=\"picture-card\"\r\n                className={custom_class}\r\n                fileList={fileList_status && fileList}\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                showUploadList={true}\r\n                beforeUpload={beforeUpload}\r\n                onChange={(e)=>{handleChange(e)}}\r\n            >\r\n                {img_url ? <img src={img_url} alt=\"avatar\" style={{ width: '50%' }} /> : uploadButton}\r\n            </Upload>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileUpload;\r\n"],"sourceRoot":""}