{"version":3,"sources":["component/User/Login/CompanyWorkerDetail.js","graphql/Admin/user.js"],"names":["Address","React","lazy","Promise","all","__webpack_require__","e","then","bind","Option","Select","content_data","Form","create","props","useHistory","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","emails","_useState3","_useState4","address_visible","set_address_visible","_useState5","_useState6","result","useQuery","USER_EMAIL_QUERY","form","SearchEmail","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","value","variable_data","wrap","_context","prev","next","email","$regex","$options","role","refetch","variables","stop","_x","apply","this","arguments","console","log","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","antd__WEBPACK_IMPORTED_MODULE_5__","gutter","antd__WEBPACK_IMPORTED_MODULE_6__","span","className","lg","antd__WEBPACK_IMPORTED_MODULE_7__","onClick","company","visible","antd__WEBPACK_IMPORTED_MODULE_8__","Item","label","getFieldDecorator","rules","required","antd__WEBPACK_IMPORTED_MODULE_4__","mode","style","width","placeholder","onSearch","map","mailData","key","antd__WEBPACK_IMPORTED_MODULE_9__","onChange","concat","target","checked","antd__WEBPACK_IMPORTED_MODULE_10__","type","change_from_type","validateFields","_ref2","_callee2","err","values","_context2","submitFromData","_x2","_x3","ADD_USER","gql","_templateObject","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","UPDATE_USER","_templateObject2","GET_USER","_templateObject3","DELETE_USER","_templateObject4","FIND_USER","_templateObject5","PROVIDER_DOCUMENT_VERIFIED","_templateObject6","_templateObject7","GET_COMPANY","_templateObject8","UPDATE_COMPANY_DETAIL","_templateObject9","DELETE_COMPANY","_templateObject10","DELETE_COMPANY_PROVIDER","_templateObject11"],"mappings":"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","file":"static/js/158.392c3cc1.chunk.js","sourcesContent":["import React, { Suspense,useState, useEffect } from 'react'\nimport { Row, Col, Button, Form, Card, Checkbox, Select,Skeleton } from 'antd';\nimport message from 'antd/lib/message';\nimport { useHistory } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { USER_EMAIL_QUERY } from '../../../graphql/Admin/user';\nconst Address = React.lazy(() => import('../Book/Address'));\n\nconst { Option } = Select;\nconst content_data = {\n    data1: \"ADD YOUR WORKER\",\n    data2: \"BACK\",\n    data3: \"REGISTER\",\n}\nconst CompanyRegistrationDetail = (props) => {\n    let history = useHistory();\n    const [emails, setemails] = useState([]);\n    const [address_visible, set_address_visible] = useState(false);\n    const [user_id, set_user_id] = useState(\"\");\n    const result = useQuery(USER_EMAIL_QUERY);\n    const { form } = props;\n    const onChange = (e) => {\n        console.log(`checked = ${e.target.checked}`);\n    }\n\n    const SearchEmail = async (value) => {\n        if (value) {\n            let variable_data = { 'email': { $regex: '.*' + value + '.*', $options: 'i' }, role: 2 }\n            result.refetch({ variables: { variable_data } })\n        }\n    }\n\n    const chooseType = (type) => {\n        props.change_from_type(type)\n    }\n\n    const SubmitData = (type) => {\n        form.validateFields(async (err, values) => {\n            props.submitFromData(values,\"COMPANY_WORKER_DETAIL\")\n        })\n    }\n\n    console.log(\"SearchEmail -> result\", result)\n    return (\n        <>\n            <Row gutter={[16, 32]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">{content_data['data1']}</div>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24}>\n                    <div className=\"company_reg_detail\">\n                        <Row>\n                            <Col className=\"\" lg={24}>\n                                <Card onClick={() => { set_address_visible(!address_visible) }}>\n                                    Address\n                                </Card>\n                                <div className={address_visible ? \"d-none\":\"\"}>\n                                   <Address company={true} visible={address_visible} />\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row gutter={[0, 24]}>\n                            <Col className=\"\" lg={24}>\n                                <Form.Item label=\"Add your worker\">\n                                    {form.getFieldDecorator(\"provider_email\", {\n                                        // initialValue: this.state.update_data.address,\n                                        rules: [{ required: false }]\n                                    })(<Select className=\"input_border\" mode=\"tags\" style={{ width: '100%' }} placeholder=\"Enter your worker email\" onSearch={SearchEmail}>\n                                        {emails.map(mailData => (\n                                            <Option key={mailData.email}>{mailData.email}</Option>\n                                        ))}\n                                    </Select>)}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"\" lg={24}>\n                                <Form.Item label=\"\">\n                                    {form.getFieldDecorator(\"add_label\", {\n                                        rules: [{ required: false }]\n                                    })(<Checkbox onChange={onChange}>Add label</Checkbox>)}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"\" span={12}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className=\"w-50\" onClick={() => { chooseType('COMPANY_REGISTRATION_DETAIL') }}>\n                            <div>{content_data['data2']}</div>\n                        </Button>\n                    </div>\n                </Col>\n                <Col className=\"\" span={12}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className=\"w-50\" onClick={() => { SubmitData() }}>\n                            <div>{content_data['data3']}</div>\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    )\n};\nexport default Form.create()(CompanyRegistrationDetail);\n","import gql from \"graphql-tag\";\n\nexport const ADD_USER = gql`\n    mutation ADDUSER($role:Int,$demo:Boolean,$country_code:String,$phone_no:String,$email:String,$password:String,$last_name:String,$first_name:String,$provider_subCategoryID:[ID],$lat:Float,$lng:Float,$address:String) {\n        admin_add_user(role:$role,demo:$demo,country_code:$country_code,phone_no:$phone_no,email:$email,password:$password,last_name:$last_name,first_name:$first_name,provider_subCategoryID:$provider_subCategoryID,lat:$lat,lng:$lng,address:$address){\n            info\n        }\n    }\n`;\n\nexport const UPDATE_USER = gql`\n    mutation UPDATEUSER($_id:ID,$role:Int,$demo:Boolean,$country_code:String,$phone_no:String,$email:String,$password:String,$last_name:String,$first_name:String,$provider_subCategoryID:[ID],$lat:Float,$lng:Float,$address:String) {\n        admin_update_user(_id:$_id,role:$role,demo:$demo,country_code:$country_code,phone_no:$phone_no,email:$email,password:$password,last_name:$last_name,first_name:$first_name,provider_subCategoryID:$provider_subCategoryID,lat:$lat,lng:$lng,address:$address){\n            info\n        }\n    }\n`;\n\nexport const GET_USER = gql`\n query GETUSER($limit: Int,$page:Int,$role:String,$proof_status:Int) {\n    get_user(limit:$limit,page:$page,role:$role,proof_status:$proof_status) {\n        pageInfo{\n            totalDocs\n            page\n        }\n        data{\n            _id\n            country_code\n            phone_no\n            email\n            first_name\n            last_name\n            address\n            location\n            password\n            provider_subCategoryID\n            # provider_document_url\n            proof_status\n        }\n    }\n}\n`;\n\n\n\nexport const DELETE_USER = gql`\n    mutation DELETEUSER($_id: ID)  {\n        deleteDetails(_id:$_id){\n        msg\n        status         \n    }\n}`\n\nexport const FIND_USER = gql`\nquery FINDUSER($_id:ID) {\n    user(_id:$_id) {\n        _id\n        country_code\n        phone_no\n        email\n        first_name\n        last_name\n        demo\n        address\n        location\n        password\n        provider_subCategoryID\n        professional_document_url\n        personal_document_url\n        proof_status\n    }\n}\n`;\n\n\nexport const PROVIDER_DOCUMENT_VERIFIED = gql`\nmutation PROVIDERDOCUMENTVERIFIED($_id:ID,$proof_status:String) {\n    provider_document_verified(_id:$_id,proof_status:$proof_status) {\n        info\n        # provider_document_url\n        proof_status\n    }\n}\n`;\n\nexport const USER_EMAIL_QUERY = gql`\nquery USEREMAILQUERY($data:JSON) {\n    user_search(data:$data) {\n        _id\n        email\n        proof_status\n        phone_no\n        first_name\n        last_name\n        role\n    }\n}\n`;\n\nexport const GET_COMPANY = gql`\n query GETCOMPANY($limit: Int,$page:Int,$search:JSON,$company_id:ID,$provider_search:JSON) {\n    get_company_detail(limit:$limit,page:$page,search:$search,company_id:$company_id) {\n        pageInfo{\n            totalDocs\n            page\n        }\n        data{\n            _id\n            user_id\n            company_name\n            company_website\n            about_company\n            company_category\n            user_id\n            get_company_user_detail {\n                first_name\n                last_name\n                role\n            }\n            get_company_address_detail(company_id:$company_id) {\n                address\n                _id\n                lat\n                lng\n            }\n            get_parent_company_provider(provider_search:$provider_search,company_id:$company_id) {\n                email\n                created_at\n                provider_id\n                register_status\n                register_link_status\n                _id\n            }\n        }\n    }\n}\n`;\n\n\n\nexport const UPDATE_COMPANY_DETAIL = gql`\n    mutation UPDATECOMPANYDETAIL($_id: ID,$company_data:JSON,$logo_file:Upload,$profile_file:Upload)  {\n        update_company_detail(_id:$_id,company_data:$company_data,logo_file:$logo_file,profile_file:$profile_file){\n        msg\n        status         \n    }\n}`\n\nexport const DELETE_COMPANY = gql`\n    mutation DELETECOMPANY($company_id: ID)  {\n        deleteCompany(company_id:$company_id){\n        msg\n        status         \n    }\n}`\n\n\nexport const DELETE_COMPANY_PROVIDER = gql`\n    mutation DELETECOMPANYPROVIDER($_id:ID,$company_id: ID)  {\n        deleteCompanyProvider(_id:$_id,company_id:$company_id){\n        msg\n        status         \n    }\n}`\n"],"sourceRoot":""}