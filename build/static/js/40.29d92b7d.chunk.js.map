{"version":3,"sources":["component/Admin/Company/CompanyProfile.js"],"names":["id","Layout","Content","Typography","Title","Select","Option","ProfileCompany","React","lazy","__webpack_require__","e","then","bind","props","_this","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_super","call","fetch_find_company","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","client","query","GET_COMPANY","variables","company_id","match","params","fetchPolicy","result","console","log","setState","update","update_data","data","get_company_detail","company_provider","get_parent_company_provider","stop","SearchEmail","_ref2","_callee2","value","_context2","email","$regex","$options","role","USER_EMAIL_QUERY","emails","user_search","_x","apply","arguments","normFile","Array","isArray","fileList","getBase64","img","callback","reader","FileReader","addEventListener","readAsDataURL","beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","handle_logo_Change","info","status","originFileObj","logo_file","imageUrl","loading","handle_profile_Change","profile_file","profile_imageUrl","update_company","_this$props","form","history","validateFields","_ref3","_callee3","err","values","company_data","_context3","length","state","mutate","mutation","UPDATE_COMPANY_DETAIL","Alert_msg","update_company_detail","push","_x2","_x3","remove","k","keys","getFieldValue","setFieldsValue","filter","key","add","nextKeys","concat","handleSubmit","preventDefault","names","map","modalVisible","dataSource","previewVisible","previewImage","pagination","pageSize","current","total","simple","selectedItems","category","_this$props2","_this$props2$match","_this$props2$match$pa","resetFields","undefined","_this2","_this$props$form","getFieldDecorator","initialValue","formItems","index","react__WEBPACK_IMPORTED_MODULE_15___default","createElement","antd__WEBPACK_IMPORTED_MODULE_10__","Item","label","required","validateTrigger","rules","whitespace","antd__WEBPACK_IMPORTED_MODULE_11__","placeholder","style","width","marginRight","antd__WEBPACK_IMPORTED_MODULE_12__","className","onClick","onSubmit","antd__WEBPACK_IMPORTED_MODULE_13__","htmlType","Component","Form","create"],"mappings":"6SAkBIA,qBAHgBC,IAAZC,QACUC,IAAVC,MACWC,IAAXC,OACC,GAEHC,GADgBC,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,gEAEnC,SAAAN,EAAYO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAX,IACfQ,EAAAI,EAAAC,KAAAF,KAAMJ,IAoCVO,mBArCmBL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAqCE,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXC,IAAOC,MAAM,CACfA,MAAOC,IACPC,UAAW,CAAEC,WAAYpB,EAAKD,MAAMsB,MAAMC,OAAOrC,IACjDsC,YAAa,aACd1B,KAAK,SAAA2B,GACJC,QAAQC,IAAIF,GACZxB,EAAK2B,SAAS,CACVC,OAAQ,EACRC,YAAaL,EAAOM,KAAKC,mBAAmBD,KAAK,GACjDE,iBAAkBR,EAAOM,KAAKC,mBAAmBD,KAAK,GAAGG,gCAVhD,wBAAApB,EAAAqB,SAAAvB,MArCFX,EAmDnBmC,YAnDmB,eAAAC,EAAAnC,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAmDL,SAAA2B,EAAOC,GAAP,IAAAR,EAAA,OAAAtB,EAAAC,EAAAG,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cACNe,EAAO,CAAEU,MAAS,CAAEC,OAAQ,KAAOH,EAAQ,KAAMI,SAAU,KAAOC,KAAM,GADlEJ,EAAAxB,KAAA,EAEJC,IAAOC,MAAM,CACfA,MAAO2B,IACPzB,UAAW,CAAEW,QACbP,YAAa,aACd1B,KAAK,SAAA2B,GACJC,QAAQC,IAAIF,GACZxB,EAAK2B,SAAS,CACVkB,OAAQrB,EAAOM,KAAKgB,gBATlB,wBAAAP,EAAAL,SAAAG,MAnDK,gBAAAU,GAAA,OAAAX,EAAAY,MAAA7C,KAAA8C,YAAA,GAAAjD,EAiEnBkD,SAAW,SAAAtD,GACP,OAAIuD,MAAMC,QAAQxD,GACPA,EAEJA,GAAKA,EAAEyD,UArECrD,EAwEnBsD,UAAY,SAACC,EAAKC,GACd,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,kBAAMH,EAASC,EAAOjC,UACtDiC,EAAOG,cAAcL,IA3ENvD,EA8EnB6D,aAAe,SAACC,GACZ,IAAMC,EAA2B,eAAdD,EAAKE,MAAuC,cAAdF,EAAKE,KACjDD,GACDE,IAAQC,MAAM,qCAElB,IAAMC,EAASL,EAAKM,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACDF,IAAQC,MAAM,gCAEXH,GAAcI,GAvFNnE,EA2FnBqE,mBAAqB,SAAAC,GACQ,cAArBA,EAAKR,KAAKS,OAIVD,EAAKR,KAAKS,SACV9C,QAAQC,IAAI4C,EAAKR,KAAKU,eACtBxE,EAAK2B,SAAS,CAAE8C,UAAWH,EAAKR,KAAKU,gBACrCxE,EAAKsD,UAAUgB,EAAKR,KAAKU,cAAe,SAAAE,GAAQ,OAC5C1E,EAAK2B,SAAS,CACV+C,WACAC,SAAS,OATjB3E,EAAK2B,SAAS,CAAEgD,SAAS,KA7Fd3E,EA4GnB4E,sBAAwB,SAAAN,GACK,cAArBA,EAAKR,KAAKS,OAIVD,EAAKR,KAAKS,SACV9C,QAAQC,IAAI4C,EAAKR,KAAKU,eACtBxE,EAAK2B,SAAS,CAAEkD,aAAcP,EAAKR,KAAKU,gBACxCxE,EAAKsD,UAAUgB,EAAKR,KAAKU,cAAe,SAAAM,GAAgB,OACpD9E,EAAK2B,SAAS,CACVmD,mBACAH,SAAS,OATjB3E,EAAK2B,SAAS,CAAEgD,SAAS,KA9Gd3E,EA6HnB+E,eAAiB,WACb,IAAAC,EAA0BhF,EAAKD,MAAvBkF,EAARD,EAAQC,KAAMC,EAAdF,EAAcE,QACdD,EAAKE,eAAL,eAAAC,EAAAnF,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAoB,SAAA2E,EAAOC,EAAKC,GAAZ,IAAAC,EAAA3D,EAAA,OAAArB,EAAAC,EAAAG,KAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,UACXuE,EADW,CAAAG,EAAA1E,KAAA,gBAERyE,EAAe,GACfD,EAAM,OACNC,EAAY,KAAWD,EAAM,MAE7BA,EAAM,QACNC,EAAY,MAAYD,EAAM,OAE9BA,EAAM,cACNC,EAAY,YAAkBD,EAAM,aAEpCA,EAAM,UACNC,EAAY,QAAcD,EAAM,SAEhCA,EAAM,gBAAsBA,EAAM,eAAmBG,SACrDF,EAAY,eAAqBD,EAAM,gBAEvC1D,EAAc,GACd7B,EAAKD,MAAMsB,MAAMC,OAAOrC,KACxB4C,EAAW,IAAU7B,EAAKD,MAAMsB,MAAMC,OAAOrC,IAE7CmF,IAAKoB,KACL3D,EAAW,aAAmB,CAAC,CAAC2D,KAEhCxF,EAAK2F,MAAMlB,WAAaL,IAAKpE,EAAK2F,MAAMlB,aACxC5C,EAAW,UAAgB7B,EAAK2F,MAAMlB,WAEtCzE,EAAK2F,MAAMd,cAAgBT,IAAKpE,EAAK2F,MAAMd,gBAC3ChD,EAAW,aAAmB7B,EAAK2F,MAAMd,cA7BjCY,EAAA1E,KAAA,GA+BNC,IAAO4E,OAAO,CAChBC,SAAUC,IACV3E,UAAWU,IACZhC,KAAK,SAAC2B,EAAQmD,EAAST,GACtB6B,YAAUvE,EAAOM,KAAKkE,uBAC2B,YAA7CxE,EAAOM,KAAKkE,sBAAsBzB,QAClCW,EAAQe,KAAK,oBArCT,yBAAAR,EAAAvD,SAAAmD,MAApB,gBAAAa,EAAAC,GAAA,OAAAf,EAAApC,MAAA7C,KAAA8C,YAAA,KA/HejD,EA4KnBoG,OAAS,SAAAC,GACL,IAAQpB,EAASjF,EAAKD,MAAdkF,KAEFqB,EAAOrB,EAAKsB,cAAc,QAEZ,IAAhBD,EAAKZ,QAKTT,EAAKuB,eAAe,CAChBF,KAAMA,EAAKG,OAAO,SAAAC,GAAG,OAAIA,IAAQL,OAvLtBrG,EA2LnB2G,IAAM,WACF,IAAQ1B,EAASjF,EAAKD,MAAdkF,KAGF2B,EADO3B,EAAKsB,cAAc,QACVM,OAAO5H,KAG7BgG,EAAKuB,eAAe,CAChBF,KAAMM,KAnMK5G,EAuMnB8G,aAAe,SAAAlH,GACXA,EAAEmH,iBACF/G,EAAKD,MAAMkF,KAAKE,eAAe,SAACG,EAAKC,GACjC,IAAKD,EAAK,CACN,IAAQgB,EAAgBf,EAAhBe,KAAMU,EAAUzB,EAAVyB,MACdvF,QAAQC,IAAI,4BAA6B6D,GACzC9D,QAAQC,IAAI,iBAAkB4E,EAAKW,IAAI,SAAAP,GAAG,OAAIM,EAAMN,UA3M5D1G,EAAK2F,MAAQ,CACTuB,cAAc,EACdC,WAAY,GACZxC,SAAS,EACTD,SAAU,GACVI,iBAAkB,GAClBlD,OAAQ,EACRC,YAAa,GACbiC,KAAM,GACNW,UAAW,GACXI,aAAc,GACduC,gBAAgB,EAChBC,aAAc,GACdC,WAAY,CACRC,SAAU,EACVC,QAAS,EACTC,MAAO,EACPC,QAAQ,GAEZC,cAAe,GACfC,SAAU,GACV/E,OAAQ,GACRb,iBAAkB,IAxBPhC,uDA4BnB,WAAoB,IAAA6H,EAAAC,EAAAC,EACC5H,KAAKJ,MAAdkF,KACH+C,mBAEiCC,KAAlC,QAAAJ,EAAA1H,KAAKJ,aAAL,IAAA8H,OAAA,UAAAC,EAAAD,EAAYxG,aAAZ,IAAAyG,OAAA,UAAAC,EAAAD,EAAmBxG,cAAnB,IAAAyG,OAAA,EAAAA,EAA2B9I,KAC3BkB,KAAKG,2CAkLb,WAAS,IAAA4H,EAAA/H,KACLgI,EAA6ChI,KAAKJ,MAAMkF,KAAhDmD,EAARD,EAAQC,kBAAmB7B,EAA3B4B,EAA2B5B,cAE3B6B,EAAkB,OAAQ,CAAEC,aAAc,KAC1C,IAAM/B,EAAOC,EAAc,QACrB+B,EAAYhC,EAAKW,IAAI,SAACZ,EAAGkC,GAAJ,OACvBC,EAAA/H,EAAAgI,cAACC,EAAA,EAAKC,KAAN,CACIC,MAAiB,IAAVL,EAAc,aAAe,GACpCM,UAAU,EACVnC,IAAKL,GAEJ+B,EAAiB,SAAAvB,OAAUR,EAAV,KAAgB,CAC9ByC,gBAAiB,CAAC,WAAY,UAC9BC,MAAO,CACH,CACIF,UAAU,EACVG,YAAY,EACZ/E,QAAS,yDANpBmE,CASEI,EAAA/H,EAAAgI,cAACQ,EAAA,EAAD,CAAOC,YAAY,iBAAiBC,MAAO,CAAEC,MAAO,OAAQC,YAAa,MAC3E/C,EAAKZ,OAAS,EACX8C,EAAA/H,EAAAgI,cAACa,EAAA,EAAD,CACIC,UAAU,wBACVvF,KAAK,iBACLwF,QAAS,kBAAMtB,EAAK9B,OAAOC,MAE/B,QAKHiD,EAAA,EAAWnJ,KAAKwF,MAAMhB,QAIdxE,KAAKJ,MAAdkF,KACR,OACIuD,EAAA/H,EAAAgI,cAACC,EAAA,EAAD,CAAMe,SAAUtJ,KAAK2G,cAChBwB,EACDE,EAAA/H,EAAAgI,cAACC,EAAA,EAAKC,KAAN,KACIH,EAAA/H,EAAAgI,cAACiB,EAAA,EAAD,CAAQ1F,KAAK,SAASwF,QAASrJ,KAAKwG,IAAKwC,MAAO,CAAEC,MAAO,SACrDZ,EAAA/H,EAAAgI,cAACa,EAAA,EAAD,CAAMtF,KAAK,SADf,eAIJwE,EAAA/H,EAAAgI,cAACC,EAAA,EAAKC,KAAN,KACIH,EAAA/H,EAAAgI,cAACiB,EAAA,EAAD,CAAQ1F,KAAK,UAAU2F,SAAS,UAAhC,mBAlQSlK,IAAMmK,YA4QpBC,cAAKC,QAALD,CAAcrK","file":"static/js/40.29d92b7d.chunk.js","sourcesContent":["import { Button, Checkbox, Col, Form, Icon, Input, Layout, message, Radio, Row, Select, Tag, Typography } from 'antd';\nimport Card from 'antd/es/card';\nimport Table from 'antd/es/table';\nimport Upload from 'antd/es/upload';\nimport size from 'lodash/size';\nimport React, { Suspense } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { client } from \"../../../apollo\";\nimport { GET_COMPANY, UPDATE_COMPANY_DETAIL, USER_EMAIL_QUERY } from '../../../graphql/Admin/user';\nimport '../../../scss/Category.scss';\nimport '../../../scss/template.scss';\nimport { Alert_msg } from '../../Comman/alert_msg';\nimport RoleView, { RoleViewFunction } from '../../Comman/roles_permission_view';\nimport AdminHeader from '../Layout/AdminHeader';\nimport AdminSider from '../Layout/AdminSider';\nconst { Content } = Layout;\nconst { Title } = Typography;\nconst { Option } = Select;\nlet id = 0;\nconst CompanyWorker = React.lazy(() => import('./CompanyWorker'));\nclass ProfileCompany extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalVisible: false,\n            dataSource: [],\n            loading: false,\n            imageUrl: '',\n            profile_imageUrl: '',\n            update: 0,\n            update_data: {},\n            file: {},\n            logo_file: {},\n            profile_file: {},\n            previewVisible: false,\n            previewImage: '',\n            pagination: {\n                pageSize: 5,\n                current: 1,\n                total: 0,\n                simple: true,\n            },\n            selectedItems: [],\n            category: [],\n            emails: [],\n            company_provider: [],\n        };\n\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        form.resetFields();\n        // console.log(this.props.match.params.id);\n        if (this.props?.match?.params?.id !== undefined) {\n            this.fetch_find_company();\n        }\n    }\n\n    fetch_find_company = async () => {\n        await client.query({\n            query: GET_COMPANY,\n            variables: { company_id: this.props.match.params.id },\n            fetchPolicy: 'no-cache',\n        }).then(result => {\n            console.log(result);\n            this.setState({\n                update: 1,\n                update_data: result.data.get_company_detail.data[0],\n                company_provider: result.data.get_company_detail.data[0].get_parent_company_provider,\n            });\n        });\n    }\n    SearchEmail = async (value) => {\n        let data = { 'email': { $regex: '.*' + value + '.*', $options: 'i' }, role: 2 }\n        await client.query({\n            query: USER_EMAIL_QUERY,\n            variables: { data },\n            fetchPolicy: 'no-cache',\n        }).then(result => {\n            console.log(result);\n            this.setState({\n                emails: result.data.user_search,\n            });\n        });\n    }\n\n    normFile = e => {\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    getBase64 = (img, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    beforeUpload = (file) => {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n\n    handle_logo_Change = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status) {\n            console.log(info.file.originFileObj);\n            this.setState({ logo_file: info.file.originFileObj });\n            this.getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    handle_profile_Change = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status) {\n            console.log(info.file.originFileObj);\n            this.setState({ profile_file: info.file.originFileObj });\n            this.getBase64(info.file.originFileObj, profile_imageUrl =>\n                this.setState({\n                    profile_imageUrl,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    update_company = () => {\n        const { form, history } = this.props;\n        form.validateFields(async (err, values) => {\n            if (!err) {\n                let company_data = {}\n                if (values['name']) {\n                    company_data['name'] = values['name']\n                }\n                if (values['about']) {\n                    company_data['about'] = values['about']\n                }\n                if (values['website_url']) {\n                    company_data['website_url'] = values['website_url']\n                }\n                if (values['address']) {\n                    company_data['address'] = values['address']\n                }\n                if (values['provider_email'] && values['provider_email'].length) {\n                    company_data['provider_email'] = values['provider_email']\n                }\n                let update_data = {}\n                if (this.props.match.params.id) {\n                    update_data['_id'] = this.props.match.params.id\n                }\n                if (size(company_data)) {\n                    update_data['company_data'] = [[company_data]]\n                }\n                if (this.state.logo_file && size(this.state.logo_file)) {\n                    update_data['logo_file'] = this.state.logo_file\n                }\n                if (this.state.profile_file && size(this.state.profile_file)) {\n                    update_data['profile_file'] = this.state.profile_file\n                }\n                await client.mutate({\n                    mutation: UPDATE_COMPANY_DETAIL,\n                    variables: update_data\n                }).then((result, loading, error) => {\n                    Alert_msg(result.data.update_company_detail);\n                    if (result.data.update_company_detail.status === \"success\") {\n                        history.push('/admin-company');\n                    }\n                });\n            }\n        });\n    };\n\n\n    remove = k => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        // We need at least one passenger\n        if (keys.length === 1) {\n            return;\n        }\n\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    };\n\n    add = () => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const { keys, names } = values;\n                console.log('Received values of form: ', values);\n                console.log('Merged values:', keys.map(key => names[key]));\n            }\n        });\n    };\n\n\n    render() {\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        \n        getFieldDecorator('keys', { initialValue: [] });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item\n                label={index === 0 ? 'Passengers' : ''}\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`names[${k}]`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Please input passenger's name or delete this field.\",\n                        },\n                    ],\n                })(<Input placeholder=\"passenger name\" style={{ width: '100%', marginRight: 8 }} />)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        const { form } = this.props;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                {formItems}\n                <Form.Item >\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '100%' }}>\n                        <Icon type=\"plus\" /> Add field\n                    </Button>\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n\n        );\n    }\n}\n\nexport default Form.create()(ProfileCompany);\n"],"sourceRoot":""}