{"version":3,"sources":["graphql/User/milestone.js","component/User/Book/milestone/update/CreateDynamicMilestone.js"],"names":["GET_MILESTONE_PAGINATION","gql","UPDATE_MILESTONE","Option","Select","TextArea","Input","Form","create","props","form","useState","form_count","set_form_count","useMutation","loading","useEffect","test_data","i","count","push","file","image","title","description","error_title","remove_from","index","after_remove_milestone","splice","normFile","e","Array","isArray","fileList","name","className","map","field","console","log","gutter","span","length","onConfirm","type","Item","label","key","getFieldDecorator","keys","initialValue","rules","required","size","rows","min","addonAfter","defaultValue","value","valuePropName","getValueFromEvent","multiple","listType","action","block","onClick","validateFields","err","values","a","milestone_data","_","inner_file","originFileObj","input_data","final_data","data","update_milestone","status","Alert_msg","msg","save_milestone"],"mappings":"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","file":"static/js/30.dca3a57d.chunk.js","sourcesContent":["\r\nimport gql from \"graphql-tag\";\r\n\r\nexport const GET_MILESTONE_PAGINATION = gql`\r\n    query GETMILESTONEPAGINATION($_id:ID,$contract_id:ID,$biding_id:ID,$location_code:String){\r\n        get_biding_milestone(_id:$_id,contract_id:$contract_id,biding_id:$biding_id){\r\n                _id\r\n                budget(code:$location_code)\r\n                ref: milestone_ref\r\n                created_at\r\n                user_id\r\n                contract_id\r\n                timeline\r\n                timeline_type\r\n                payment_option(code:$location_code)\r\n                booking_status\r\n                description\r\n                title\r\n                pro_description\r\n                extra_fare\r\n                extra_fare_reason\r\n                total(code:$location_code)\r\n                get_milestone_all_images(root:true){\r\n                    small_image\r\n                }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_MILESTONE_DETAIL = gql`\r\n    query GETMILESTONEDETAIL($_id:ID,$contract_id:ID,$biding_id:ID){\r\n        get_biding_milestone_detail(_id:$_id,contract_id:$contract_id,biding_id:$biding_id){\r\n            _id\r\n            budget\r\n            ref: milestone_ref\r\n            created_at\r\n            user_id\r\n            contract_id\r\n            description\r\n            timeline\r\n            timeline_type\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport const UPDATE_MILESTONE = gql`\r\nmutation UPDATEMILESTONE($option:String  \r\n    $_id:ID\r\n    $user_id: String\r\n    $provider_id:ID\r\n    $biding_id:ID\r\n    $contract_id:ID\r\n    $file:[Upload]\r\n    $milestone_data:JSON){ \r\n    update_milestone(\r\n        option:$option  \r\n        _id:$_id\r\n        user_id: $user_id\r\n        provider_id:$provider_id\r\n        biding_id:$biding_id\r\n        contract_id:$contract_id\r\n        file:$file\r\n        milestone_data:$milestone_data\r\n  ) {\r\n    msg\r\n    status\r\n  }\r\n}`","import React, { Suspense, useState, useEffect } from 'react'\r\nimport { Row, Col, Form, InputNumber, Input, Icon, Select, Button, Popconfirm, Upload } from 'antd';\r\nimport { Alert_msg } from '../../../../Comman/alert_msg';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { UPDATE_MILESTONE } from '../../../../../graphql/User/milestone';\r\nimport _ from 'lodash'\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst sights = [{\r\n    value: 'days',\r\n    label: \"Days\"\r\n}, {\r\n    value: 'months',\r\n    label: \"Month\"\r\n}, {\r\n    value: 'years',\r\n    label: \"Years\"\r\n}\r\n]\r\nconst CreateMilestone = (props) => {\r\n    var form = props.form\r\n\r\n    const [form_count, set_form_count] = useState([]);\r\n    const [update_milestone, { loading: updateLoading }] = useMutation(UPDATE_MILESTONE)\r\n\r\n    useEffect(() => {\r\n        let test_data = []\r\n        for (let i = 1; i <= props.count; i++) {\r\n            test_data.push({ count: i, file: [], image: [], title: \"\", description: \"\", error_title: false })\r\n        }\r\n        set_form_count(test_data)\r\n    }, [props])\r\n\r\n    const remove_from = (index) => {\r\n        let after_remove_milestone = form_count.splice(index, 1);\r\n        set_form_count(after_remove_milestone)\r\n    }\r\n    const save_milestone = (field, i) => {\r\n        console.log(\"save_milestone -> form\")\r\n        form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                let file = []\r\n                let milestone_data = {}\r\n\r\n                if (_.size(values[`file_${i}`])) {\r\n                    file = values[`file_${i}`].map(inner_file => {\r\n                        return inner_file.originFileObj\r\n                    })\r\n                }\r\n                milestone_data[\"title\"] = values[`title_${i}`]\r\n                milestone_data[\"description\"] = values[`description_${i}`]\r\n                milestone_data[\"timeline\"] = values[`timeline_${i}`]\r\n                milestone_data[\"timeline_type\"] = values[`timeline_type_${i}`]\r\n                milestone_data[\"budget\"] = values[`budget_${i}`]\r\n\r\n                if( milestone_data[\"budget\"]  && milestone_data[\"title\"] &&  milestone_data[\"timeline_type\"] && milestone_data[\"description\"] &&  milestone_data[\"timeline\"]){\r\n                    let input_data = {\r\n                        milestone_data\r\n                    }\r\n                    if (_.size(file)) {\r\n                        input_data['file'] = file\r\n                    }\r\n    \r\n    \r\n                    console.log(\"save_milestone -> input_data\", input_data)\r\n                    return false\r\n                    let final_data = await update_milestone({ variables: input_data })\r\n                    if (final_data.data.update_milestone.status === \"success\") {\r\n                        Alert_msg(final_data.data.update_milestone)\r\n                        // fetch_milestone()\r\n                    }\r\n                }else{\r\n                    Alert_msg({ msg: \"Please fill all the field\", status: \"failed\" })\r\n                }\r\n            \r\n            } else {\r\n                Alert_msg({ msg: \"Milestone update failed\", status: \"failed\" })\r\n            }\r\n        })\r\n    }\r\n\r\n    const normFile = e => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    return (\r\n        <>\r\n            <Row>\r\n\r\n                <Form name=\"nested-milestone\" className=\"\">\r\n                    {(form_count || []).map((field, i) => {\r\n                        console.log(\"CreateMilestone -> field\", field)\r\n                        return (\r\n                            <>\r\n                                <Row gutter={[16, 0]}>\r\n                                    <Col span={24}>\r\n                                        <div className='d-flex w-100 justify-content-between normal_font_size pb-3'>\r\n                                            <div> Milestone {i + 1}</div>\r\n                                            {form_count.length >= 2 && <Popconfirm title=\"Sure to delete milestone ?\" onConfirm={() => remove_from(i)}>\r\n                                                <div className='cursor_point d-flex justify-content-between align-items-center text-danger'><Icon className=\"px-3\" type=\"delete\" /> <div>Remove</div></div>\r\n                                            </Popconfirm>\r\n                                            }\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={[16, 0]}>\r\n                                    <Col span={24}>\r\n                                        <Form.Item label=\"Title\" key={i}>\r\n                                            {form.getFieldDecorator(`title_${i}`, {\r\n                                                keys: \"\",\r\n                                                initialValue: \"\",\r\n                                                rules: [{ required: field['error_title'] ? true : false }]\r\n\r\n                                            })(<Input size={\"large\"} className=\"w-100\" />)}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={[16, 0]}>\r\n                                    <Col span={24}>\r\n                                        <Form.Item label=\"Description\" key={i}>\r\n                                            {form.getFieldDecorator(`description_${i}`, {\r\n                                                keys: \"\",\r\n                                                initialValue: \"\",\r\n                                            })(<TextArea size={\"large\"} rows={6} />)}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={[16, 0]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Amount to be released\" key={i}>\r\n                                            {form.getFieldDecorator(`budget_${i}`, {\r\n                                                keys: \"\",\r\n                                                initialValue: \"\",\r\n                                            })(<Input type=\"number\" size={\"large\"} className=\"w-100\" min={1}  addonAfter=\"KSH\"/>)}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Form.Item label=\"Duration\" key={i}>\r\n                                            {form.getFieldDecorator(`timeline_${i}`, {\r\n                                                keys: \"\",\r\n                                                initialValue: \"\",\r\n                                            })(\r\n                                                <InputNumber type=\"number\" size={\"large\"} className=\"w-100\" min={1} />\r\n                                            )}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Form.Item label=\"time type\" key={i}>\r\n                                            {form.getFieldDecorator(`timeline_type_${i}`, {\r\n                                                keys: \"\",\r\n                                                initialValue: \"\",\r\n                                            })(<Select defaultValue=\"days\" size={\"large\"} className=\"w-100\">\r\n                                                <Option value=\"days\">Days</Option>\r\n                                                <Option value=\"months\">Months</Option>\r\n                                                <Option value=\"years\">Years</Option>\r\n                                            </Select>\r\n                                            )}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={[16, 0]}>\r\n                                    <Col span={24}>\r\n                                        <div>\r\n                                            <Form.Item label=\"\">\r\n                                                {form.getFieldDecorator(`file_${i}`, {\r\n                                                    rules: [],\r\n                                                    valuePropName: 'fileList',\r\n                                                    getValueFromEvent: normFile,\r\n                                                })(\r\n                                                    <Upload\r\n                                                        name=\"logo\"\r\n                                                        multiple={true}\r\n                                                        listType=\"picture-card\"\r\n                                                        action=\"/upload.do\"\r\n                                                    >\r\n                                                        <div>\r\n                                                            <Icon type=\"plus\" />\r\n                                                            <div className=\"ant-upload-text\">Upload</div>\r\n                                                        </div>\r\n                                                    </Upload>)}\r\n                                            </Form.Item>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={[16, 0]}>\r\n                                    <Col span={12}>\r\n                                        {form_count.length >= 2 && <Popconfirm title=\"Sure to delete milestone ?\" onConfirm={() => remove_from(i)}>\r\n                                            <Button size={\"large\"} block className=\"normal_font_size\">\r\n                                                <div className=\"px-2\"> Cancel</div>\r\n                                            </Button>\r\n                                        </Popconfirm>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Button size={\"large\"} block onClick={() => { save_milestone(field, i) }} className=\"bg-gradient-primary text-white normal_font_size\">\r\n                                            <div className=\"px-2\"> Done</div>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>)\r\n                    })}\r\n                </Form>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default Form.create()(CreateMilestone);\r\n"],"sourceRoot":""}