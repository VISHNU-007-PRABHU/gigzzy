{"version":3,"sources":["component/User/Book/payment/stripe_payment.js"],"names":["CheckoutForm","props","stripe","useStripe","elements","useElements","history","useReactRouter","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","errorMessage","_useState3","_useState4","loading","set_loading","_useMutation","useMutation","ACCEPT_JOB_MSG","_useMutation2","manage_booking","handleSubmit","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","event","_yield$stripe$createT","token","input_data","result","wrap","_context","prev","next","preventDefault","createToken","getElement","CardElement","sent","error","id","booking_status","current_booking_status","booking_id","data","_id","role","stripe_token","payment_option","localStorage","getItem","JSON","parse","location","variables","status","Alert_msg","msg","push","concat","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","antd__WEBPACK_IMPORTED_MODULE_5__","spinning","className","size","antd__WEBPACK_IMPORTED_MODULE_6__","onSubmit","_stripe_react_stripe_js__WEBPACK_IMPORTED_MODULE_12__","options","hidePostalCode","antd__WEBPACK_IMPORTED_MODULE_7__","htmlType","block","type","disabled","stripePromise","loadStripe","StripePayout"],"mappings":"wPAiBMA,EAAe,SAACC,GAClB,IAAMC,EAASC,sBACTC,EAAWC,wBACTC,EAAYC,MAAZD,QAHoBE,EAIaC,mBAAS,IAJtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIrBK,EAJqBH,EAAA,GAAAI,GAAAJ,EAAA,GAKGD,oBAAS,IALZM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAKrBE,EALqBD,EAAA,GAKZE,EALYF,EAAA,GAAAG,EAMyBC,YAAYC,KANrCC,EAAAV,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAMrBI,EANqBD,EAAA,GAQtBE,GARsBF,EAAA,GAMHL,QAEP,eAAAQ,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBR,EAAMS,iBADWH,EAAAE,KAAA,EAEcpC,EAAOsC,YAAYpC,EAASqC,WAAWC,gBAFrD,UAAAX,EAAAK,EAAAO,KAETX,EAFSD,EAETC,MAFSD,EAEFa,OACXZ,IAASA,EAAMa,GAHF,CAAAT,EAAAE,KAAA,gBAIbrB,GAAY,GACRgB,EAAa,CACba,eAAgB7C,EAAM8C,uBACtBC,WAAY/C,EAAMgD,KAAKC,IACvBC,KAAM,EACNC,aAAcpB,EAAMa,GACpBQ,eAAgB,UAEhBC,aAAaC,QAAQ,cACrBtB,EAAU,cAAoBuB,KAAKC,MAAMH,aAAaC,QAAQ,aAAaG,UAblEtB,EAAAE,KAAA,GAeMhB,EAAe,CAAEqC,UAAW1B,IAflC,QAeTC,EAfSE,EAAAO,KAgBb1B,GAAY,GACRiB,EAAOe,KAAK3B,gBAA2D,YAAzCY,EAAOe,KAAK3B,eAAe,GAAGsC,QAC5DC,YAAU,CAAEC,IAAK,wCAAyCF,OAAQ,YAClEtD,EAAQyD,KAAR,0BAAAC,OAAuC/D,EAAMgD,KAAKC,OAElDW,YAAU,CAAEC,IAAK,iBAAkBF,OAAQ,YArBlC,yBAAAxB,EAAA6B,SAAApC,MAAH,gBAAAqC,GAAA,OAAA1C,EAAA2C,MAAAC,KAAAC,YAAA,IA0BlB,OACIC,EAAA3C,EAAA4C,cAACC,EAAA,EAAD,CAAMC,SAAUzD,EAAS0D,UAAU,qCAAqCC,KAAK,SACzEL,EAAA3C,EAAA4C,cAACK,EAAA,EAAD,CAAMC,SAAUtD,GACZ+C,EAAA3C,EAAA4C,cAAA,OAAKG,UAAU,QACXJ,EAAA3C,EAAA4C,cAACO,EAAA,YAAD,CAAaC,QAAS,CAAEC,gBAAgB,KACxCV,EAAA3C,EAAA4C,cAAA,OAAKG,UAAU,QAAQvB,KAAK,SACvBtC,GAELyD,EAAA3C,EAAA4C,cAACU,EAAA,EAAD,CAAQC,SAAS,SAASC,OAAK,EAACT,UAAU,6EAA6EU,KAAK,UAAUC,UAAWnF,IAAWE,GAA5J,sBASdkF,EAAgBC,YArDD,+GA4DNC,UALM,SAACvF,GAAD,OACjBqE,EAAA3C,EAAA4C,cAACO,EAAA,SAAD,CAAU5E,OAAQoF,GACdhB,EAAA3C,EAAA4C,cAACvE,EAAD,CAAciD,KAAMhD,EAAMgD,KAAMF,uBAAwB9C,EAAM8C","file":"static/js/117.e5ea0b58.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Button, Spin, Form } from 'antd';\nimport { ACCEPT_JOB_MSG } from '../../../../graphql/User/booking'\nimport { Alert_msg } from '../../../Comman/alert_msg';\nimport useReactRouter from 'use-react-router';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport {\n    CardElement,\n    Elements,\n    useStripe,\n    useElements,\n} from '@stripe/react-stripe-js';\n\nconst stripe_token = \"pk_test_51JVsceD7QuZwAAzVHzQUYqN4GE8kc9xMc2KZHPNVwC748tz0mfeZ11Fm2s0IR9P1G1Wn0WVclLXiMGA0MrjzZosC00WFjDfUz4\"\n\nconst CheckoutForm = (props) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const { history } = useReactRouter();\n    const [errorMessage, set_errorMessage] = useState(\"\")\n    const [loading, set_loading] = useState(false)\n    const [manage_booking, { loading: removeLoading }] = useMutation(ACCEPT_JOB_MSG)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const { token, error } = await stripe.createToken(elements.getElement(CardElement));\n        if (token && token.id) {\n            set_loading(true);\n            let input_data = {\n                booking_status: props.current_booking_status,\n                booking_id: props.data._id,\n                role: 1,\n                stripe_token: token.id,\n                payment_option: \"stripe\"\n            };\n            if (localStorage.getItem(\"currency\")) {\n                input_data['location_code'] = JSON.parse(localStorage.getItem(\"currency\")).location\n            }\n            let result = await manage_booking({ variables: input_data });\n            set_loading(false);\n            if (result.data.manage_booking && result.data.manage_booking[0].status === \"success\") {\n                Alert_msg({ msg: \"Waiting for your payment confirmation\", status: \"success\" });\n                history.push(`/admin-booking-invoice/${props.data._id}`)\n            } else {\n                Alert_msg({ msg: \"payment failed\", status: \"success\" });\n            }\n        }\n    };\n\n    return (\n        <Spin spinning={loading} className=\"d-flex justify-content-center mt-4\" size=\"large\" >\n            <Form onSubmit={handleSubmit}>\n                <div className=\"px-4\">\n                    <CardElement options={{ hidePostalCode: true }} />\n                    <div className=\"error\" role=\"alert\">\n                        {errorMessage}\n                    </div>\n                    <Button htmlType=\"submit\" block className=\"d-flex p-3 justify-content-center align-items-center normal_font_size bold\" type=\"primary\" disabled={!stripe || !elements}>\n                        Accept and Pay\n                    </Button>\n                </div>\n            </Form>\n        </Spin>\n    );\n};\n\nconst stripePromise = loadStripe(stripe_token);\n\nconst StripePayout = (props) => (\n    <Elements stripe={stripePromise}>\n        <CheckoutForm data={props.data} current_booking_status={props.current_booking_status}/>\n    </Elements>\n);\nexport default StripePayout\n"],"sourceRoot":""}