{"version":3,"sources":["component/Comman/FileUpload.js"],"names":["FileUpload","props","useHistory","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","img_url","setimg_url","_useState3","_useState4","fileList","set_fileList","_useState5","_useState6","fileList_status","setfileList_status","_useState7","_useState8","set_show_images","set_set_show_images","_useState9","_useState10","custom_class","setcustom_class","_useState11","_useState12","_useState13","_useState14","loading","setloading","_useState15","_useState16","setcontent","_useState17","_useState18","subcontent","setsubcontent","form","useEffect","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","info","category_data","wrap","_context","prev","next","file","status","custom_category","onFileUpload","originFileObj","imageUrl","stop","_x","apply","this","arguments","uploadButton","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","antd__WEBPACK_IMPORTED_MODULE_4__","type","className","Fragment","antd__WEBPACK_IMPORTED_MODULE_5__","name","accept","listType","action","showUploadList","beforeUpload","isJpgOrPng","message","error","isLt2M","size","onChange","e","src","alt","style","width"],"mappings":"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","file":"static/js/12.617cbcf8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Button, Form, Input, Icon, Upload } from 'antd';\nimport message from 'antd/lib/message';\nimport { useHistory } from \"react-router-dom\";\n\nconst content_data = {\n    data1: \"JOIN AS COMPANY\",\n    data2: \"BACK\",\n    data3: \"NEXT\",\n}\n\n\nconst FileUpload = (props) => {\n    let history = useHistory();\n    const [img_url, setimg_url] = useState(\"\");\n    const [fileList, set_fileList] = useState([]);\n    const [fileList_status, setfileList_status] = useState(false);\n    const [set_show_images, set_set_show_images] = useState(false);\n    const [custom_class, setcustom_class] = useState(\"avatar-uploader d-flex \");\n    const [user_data, setuser_data] = useState(\"\");\n    const [loading, setloading] = useState(false);\n    const [content, setcontent] = useState(\"Upload\");\n    const [subcontent, setsubcontent] = useState(\"\");\n    const { form } = props;\n    useEffect(() => {\n        if (props['custom_class']) {\n            setcustom_class(props['custom_class'])\n        }\n        if (props['custom_content']) {\n            setcontent(props['custom_content'])\n        }\n        if (props['custom_sub_content']) {\n            setsubcontent(props['custom_sub_content'])\n        }\n        if(props['set_show_images']){\n            set_set_show_images(props['set_show_images'])\n        }\n        if(props['fileList_status']){\n            setfileList_status(props['fileList_status'])\n        }\n    }, [props])\n    const getBase64 = (img, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    const beforeUpload = (file) => {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n    const handleChange = async info => {\n        setloading(true);\n        if (info.file.status) {\n            let category_data = props?.custom_category ||  \"others\"\n            props.onFileUpload(info.file.originFileObj,category_data)\n            if(fileList_status){\n                set_fileList(info.fileList)\n            }\n            getBase64(info.file.originFileObj, imageUrl => {\n                if(set_show_images){\n                    setimg_url(imageUrl)\n                }\n                setloading(false)\n            });\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            <Icon type={loading ? 'loading' : 'plus'} className=\"\" />\n            <div className=\"ant-upload-text\">\n                {/* <div className=\"bold normal_font_size\">{content}</div> */}\n                <div>{subcontent}</div>\n            </div>\n        </div>\n    );\n\n    return (\n        <>\n            <Upload\n                name=\"avatar\"\n                accept=\".png\"\n                listType=\"picture-card\"\n                className={custom_class}\n                fileList={fileList_status && fileList}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                showUploadList={true}\n                beforeUpload={beforeUpload}\n                onChange={(e)=>{handleChange(e)}}\n            >\n                {img_url ? <img src={img_url} alt=\"avatar\" style={{ width: '50%' }} /> : uploadButton}\n            </Upload>\n        </>\n    )\n};\n\nexport default FileUpload;\n"],"sourceRoot":""}