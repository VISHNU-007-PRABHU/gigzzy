{"version":3,"sources":["component/User/Book/contract/ProjectImages.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["FileUpload","Input","TextArea","React","lazy","__webpack_require__","e","then","bind","Form","create","props","useHistory","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","get_all_images_data","set_get_all_images","_useState7","_useState8","_useMutation","useMutation","UPDATE_CONTRACT_FILE","_useMutation2","ContractJobFileUpload","obj","TypeError","_objectDestructuringEmpty","get_contract_files","useQuery","GET_CONTRACT_FILES","form","customform","useEffect","fetch_data","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","next","refetch","contract_id","localStorage","getItem","sent","length","stop","apply","this","arguments","onFileUpload","_ref2","_callee2","files","input_data","_context2","file","variables","_x","react_default","createElement","Fragment","row","col","span","es_form","Item","label","getFieldDecorator","rules","valuePropName","custom_content","custom_sub_content","custom_class","gutter","map","all_image_items","card","headStyle","padding","title","className","images","image_data","Grid","loading","src","small_image"],"mappings":"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","file":"static/js/28.a2e4a46b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Input, Card } from 'antd';\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { UPDATE_CONTRACT_FILE, GET_CONTRACT_FILES } from '../../../../graphql/User/contract';\nconst { TextArea } = Input;\nconst FileUpload = React.lazy(() => import('../../../Comman/FileUpload'));\n\n\nconst ProjectImages = (props) => {\n    let history = useHistory();\n    const [img_url, setimg_url] = useState(\"\");\n    const [user_data, setuser_data] = useState(\"\");\n    const [get_all_images_data, set_get_all_images] = useState([])\n    const [loading, setloading] = useState(false);\n    const [ContractJobFileUpload, { }] = useMutation(UPDATE_CONTRACT_FILE)\n    const get_contract_files = useQuery(GET_CONTRACT_FILES)\n    const form = props.customform;\n\n    useEffect(() => {\n        fetch_data();\n    }, [props])\n\n    const fetch_data = async () => {\n        let data = await get_contract_files.refetch({ contract_id: localStorage.getItem('current_contract_id') })\n        if (data && data.data && data.data.get_contract_files && data.data.get_contract_files.length) {\n            set_get_all_images(data && data.data.get_contract_files)\n        }\n    }\n    const onFileUpload = async (files) => {\n        let input_data = {\n            contract_id: localStorage.getItem('current_contract_id'),\n            file: [files],\n        }\n        let final_data = await ContractJobFileUpload({ variables: input_data })\n\n    }\n    return (\n        <>\n            <Row>\n                <Col span={24}>\n                    <Form.Item label=\"\">\n                        {form.getFieldDecorator('file', {\n                            rules: [],\n                            valuePropName: 'fileList',\n                        })(\n                            <FileUpload\n                                custom_content=\"Upload document\"\n                                onFileUpload={onFileUpload}\n                                custom_sub_content=\"eg Documents, Pictures\"\n                                custom_class=\"avatar-uploader d-flex justify-content-center px_view\"> </FileUpload>\n                        )}\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={[16, 40]}>\n                <Col span={24}>\n                    {\n                        get_all_images_data.length ? get_all_images_data.map(all_image_items => {\n                            return (\n                                <Card headStyle={{\"padding\":\"0px 10px\"}} title={<div className=\"d-flex justify-content-between align-items-center\">\n                                    <div>{all_image_items['_id']}</div>\n                                    <div>\n                                        <FileUpload custom_content=\"\" custom_class=\"contract_header_images\"\n                                        ></FileUpload>\n                                    </div>\n                                </div>\n                                }>\n                                    {all_image_items.images.map(image_data => {\n                                        return (\n                                            <Card.Grid className=\"imgHolder position-relative p-0 w-25\">\n                                                <img loading=\"lazy\" className=\"img-fluid loading h-100\" src={image_data.small_image} />\n                                                <span className=\"bold\">text</span>\n                                            </Card.Grid>)\n                                    })}\n                                </Card>\n                            )\n                        }) : <></>\n                    }\n                </Col>\n            </Row>\n\n        </>\n    )\n};\nexport default Form.create()(ProjectImages);\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}