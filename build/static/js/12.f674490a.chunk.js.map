{"version":3,"sources":["component/Comman/ShowCategory.js"],"names":["Title","Typography","React","memo","props","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","catgeory_name","set_category_name","_useState3","_useState4","class_name","set_class_name","_useState5","_useState6","font_level","set_font_level","useEffect","custom_class","custom_font","parent_catgeory","category_type","category_name","subCategory_name","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","level","className"],"mappings":"+HAEQA,SAAUC,EAAVD,MAwBOE,cAAMC,KAvBA,SAACC,GAClB,IAAAC,EAA2CC,mBAAS,IAApDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAsBI,EAAtBJ,EAAA,GACAK,EAAqCN,mBAAS,IAA9CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GACAG,EAAqCV,mBAAS,GAA9CW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAOE,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GAcA,OAbAG,oBAAU,WACHhB,EAAMiB,cACLN,EAAeX,EAAMiB,cAEtBjB,EAAMkB,aACLH,EAAef,EAAMkB,aAErBlB,EAAMmB,iBAA2D,IAAxCnB,EAAMmB,gBAAgBC,cAC/Cb,EAAkBP,EAAMmB,gBAAgBE,eACjCrB,EAAMmB,iBAA2D,IAAxCnB,EAAMmB,gBAAgBC,eACtDb,EAAkBP,EAAMmB,gBAAgBG,mBAE7C,CAACtB,IACIuB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACJH,EAAAC,EAAAC,cAAC7B,EAAD,CAAO+B,MAAOb,EAAYc,UAAWlB,GAChCJ","file":"static/js/12.f674490a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Typography } from 'antd';\nconst { Title } = Typography;\nconst ShowCatgeory = (props) => {\n    const [catgeory_name, set_category_name] = useState(\"\");\n    const [class_name, set_class_name] = useState(\"\");\n    const [font_level, set_font_level] = useState(6);\n    useEffect(() => {\n        if(props.custom_class){\n            set_class_name(props.custom_class)\n        }\n        if(props.custom_font){\n            set_font_level(props.custom_font)\n        }\n        if (props.parent_catgeory && props.parent_catgeory.category_type === 1) {\n            set_category_name(props.parent_catgeory.category_name)\n        } else if (props.parent_catgeory && props.parent_catgeory.category_type === 2) {\n            set_category_name(props.parent_catgeory.subCategory_name)\n        }\n    }, [props])\n    return (<>\n        <Title level={font_level} className={class_name}>\n            {catgeory_name}\n        </Title>\n    </>);\n};\nexport default React.memo(ShowCatgeory);"],"sourceRoot":""}