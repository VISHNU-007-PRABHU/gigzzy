{"version":3,"sources":["component/User/Login/CompanyWorkerDetail.js"],"names":["Address","React","lazy","Option","Select","content_data","Form","create","props","useHistory","useState","emails","address_visible","set_address_visible","result","useQuery","USER_EMAIL_QUERY","form","SearchEmail","value","a","variable_data","$regex","$options","role","refetch","variables","console","log","gutter","span","className","lg","onClick","company","visible","Item","label","getFieldDecorator","rules","required","mode","style","width","placeholder","onSearch","map","mailData","key","email","onChange","e","target","checked","type","change_from_type","validateFields","err","values","submitFromData"],"mappings":"mPAMMA,EAAUC,IAAMC,MAAK,kBAAM,4CAEzBC,EAAWC,IAAXD,OACFE,EACK,kBADLA,EAEK,OAFLA,EAGK,WAgGIC,cAAKC,QAALD,EA9FmB,SAACE,GACjBC,uBAAd,IACA,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KACA,GADA,KAC+CD,oBAAS,IAAxD,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAA+BH,mBAAS,IAAxC,mBACMI,GADN,UACeC,YAASC,MAChBC,EAAST,EAATS,KAKFC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACZD,IACIE,EAAgB,CAAE,MAAS,CAAEC,OAAQ,KAAOH,EAAQ,KAAMI,SAAU,KAAOC,KAAM,GACrFV,EAAOW,QAAQ,CAAEC,UAAW,CAAEL,oBAHlB,2CAAH,sDAkBjB,OADAM,QAAQC,IAAI,wBAAyBd,GAEjC,oCACI,kBAAC,IAAD,CAAKe,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,KAAM,IACP,yBAAKC,UAAU,gEAAgE1B,KAGvF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKyB,KAAM,IACP,yBAAKC,UAAU,sBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,UAAU,GAAGC,GAAI,IAClB,kBAAC,IAAD,CAAMC,QAAS,WAAQpB,GAAqBD,KAA5C,WAGA,yBAAKmB,UAAWnB,EAAkB,SAAS,IACxC,kBAACZ,EAAD,CAASkC,SAAS,EAAMC,QAASvB,OAI5C,kBAAC,IAAD,CAAKiB,OAAQ,CAAC,EAAG,KACb,kBAAC,IAAD,CAAKE,UAAU,GAAGC,GAAI,IAClB,kBAAC,IAAKI,KAAN,CAAWC,MAAM,mBACZpB,EAAKqB,kBAAkB,iBAAkB,CAEtCC,MAAO,CAAC,CAAEC,UAAU,KAFvBvB,CAGE,kBAAC,IAAD,CAAQc,UAAU,eAAeU,KAAK,OAAOC,MAAO,CAAEC,MAAO,QAAUC,YAAY,0BAA0BC,SAAU3B,GACrHP,EAAOmC,KAAI,SAAAC,GAAQ,OAChB,kBAAC5C,EAAD,CAAQ6C,IAAKD,EAASE,OAAQF,EAASE,eAM3D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKlB,UAAU,GAAGC,GAAI,IAClB,kBAAC,IAAKI,KAAN,CAAWC,MAAM,IACZpB,EAAKqB,kBAAkB,YAAa,CACjCC,MAAO,CAAC,CAAEC,UAAU,KADvBvB,CAEE,kBAAC,IAAD,CAAUiC,SA7D5B,SAACC,GACdxB,QAAQC,IAAR,oBAAyBuB,EAAEC,OAAOC,YA4DH,oBAO3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKtB,UAAU,GAAGD,KAAM,IACpB,yBAAKC,UAAU,gEACX,kBAAC,IAAD,CAAQuB,KAAK,UAAUvB,UAAU,OAAOE,QAAS,WA5DlD,IAACqB,IA4DoE,8BA3DpF9C,EAAM+C,iBAAiBD,KA4DH,6BAAMjD,MAIlB,kBAAC,IAAD,CAAK0B,UAAU,GAAGD,KAAM,IACpB,yBAAKC,UAAU,gEACX,kBAAC,IAAD,CAAQuB,KAAK,UAAUvB,UAAU,OAAOE,QAAS,WA9DjEhB,EAAKuC,eAAL,uCAAoB,WAAOC,EAAKC,GAAZ,SAAAtC,EAAA,sDAChBZ,EAAMmD,eAAeD,EAAO,yBADZ,2CAApB,2DA+DoB,6BAAMrD","file":"static/js/63.a3e8193c.chunk.js","sourcesContent":["import React, { Suspense,useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form, Card, Checkbox, Select,Skeleton } from 'antd';\r\nimport message from 'antd/lib/message';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USER_EMAIL_QUERY } from '../../../graphql/Admin/user';\r\nconst Address = React.lazy(() => import('../Book/Address'));\r\n\r\nconst { Option } = Select;\r\nconst content_data = {\r\n    data1: \"ADD YOUR WORKER\",\r\n    data2: \"BACK\",\r\n    data3: \"REGISTER\",\r\n}\r\nconst CompanyRegistrationDetail = (props) => {\r\n    let history = useHistory();\r\n    const [emails, setemails] = useState([]);\r\n    const [address_visible, set_address_visible] = useState(false);\r\n    const [user_id, set_user_id] = useState(\"\");\r\n    const result = useQuery(USER_EMAIL_QUERY);\r\n    const { form } = props;\r\n    const onChange = (e) => {\r\n        console.log(`checked = ${e.target.checked}`);\r\n    }\r\n\r\n    const SearchEmail = async (value) => {\r\n        if (value) {\r\n            let variable_data = { 'email': { $regex: '.*' + value + '.*', $options: 'i' }, role: 2 }\r\n            result.refetch({ variables: { variable_data } })\r\n        }\r\n    }\r\n\r\n    const chooseType = (type) => {\r\n        props.change_from_type(type)\r\n    }\r\n\r\n    const SubmitData = (type) => {\r\n        form.validateFields(async (err, values) => {\r\n            props.submitFromData(values,\"COMPANY_WORKER_DETAIL\")\r\n        })\r\n    }\r\n\r\n    console.log(\"SearchEmail -> result\", result)\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 32]}>\r\n                <Col span={24}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">{content_data['data1']}</div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"company_reg_detail\">\r\n                        <Row>\r\n                            <Col className=\"\" lg={24}>\r\n                                <Card onClick={() => { set_address_visible(!address_visible) }}>\r\n                                    Address\r\n                                </Card>\r\n                                <div className={address_visible ? \"d-none\":\"\"}>\r\n                                   <Address company={true} visible={address_visible} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[0, 24]}>\r\n                            <Col className=\"\" lg={24}>\r\n                                <Form.Item label=\"Add your worker\">\r\n                                    {form.getFieldDecorator(\"provider_email\", {\r\n                                        // initialValue: this.state.update_data.address,\r\n                                        rules: [{ required: false }]\r\n                                    })(<Select className=\"input_border\" mode=\"tags\" style={{ width: '100%' }} placeholder=\"Enter your worker email\" onSearch={SearchEmail}>\r\n                                        {emails.map(mailData => (\r\n                                            <Option key={mailData.email}>{mailData.email}</Option>\r\n                                        ))}\r\n                                    </Select>)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"\" lg={24}>\r\n                                <Form.Item label=\"\">\r\n                                    {form.getFieldDecorator(\"add_label\", {\r\n                                        rules: [{ required: false }]\r\n                                    })(<Checkbox onChange={onChange}>Add label</Checkbox>)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"\" span={12}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\r\n                        <Button type=\"primary\" className=\"w-50\" onClick={() => { chooseType('COMPANY_REGISTRATION_DETAIL') }}>\r\n                            <div>{content_data['data2']}</div>\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"\" span={12}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\r\n                        <Button type=\"primary\" className=\"w-50\" onClick={() => { SubmitData() }}>\r\n                            <div>{content_data['data3']}</div>\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n};\r\nexport default Form.create()(CompanyRegistrationDetail);\r\n"],"sourceRoot":""}