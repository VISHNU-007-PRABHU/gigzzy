{"version":3,"sources":["component/User/Book/contract/ProjectImageCategoryModel.js"],"names":["Option","Select","catgeoryoptions","_id","name","Form","create","props","useHistory","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","image_detail","set_image_detail","_useMutation","useMutation","UPDATE_CONTRACT_FILE","_useMutation2","ContractJobFileUpload","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_2__","getFieldDecorator","form","useEffect","image_comman_data","submitData","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee2","wrap","_context2","prev","next","validateFields","_ref2","_callee","err","values","_context","console","log","variables","sent","data","status","modelReturnFuncion","stop","_x","_x2","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","Fragment","antd__WEBPACK_IMPORTED_MODULE_6__","antd__WEBPACK_IMPORTED_MODULE_7__","antd__WEBPACK_IMPORTED_MODULE_8__","span","Item","label","initialValue","doc_category","rules","required","antd__WEBPACK_IMPORTED_MODULE_5__","size","placeholder","allowClear","map","item","value","image_tag","antd__WEBPACK_IMPORTED_MODULE_9__","className","antd__WEBPACK_IMPORTED_MODULE_10__","type","block","onClick"],"mappings":"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","file":"static/js/53.778a9215.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Input, Button,Select } from 'antd';\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { UPDATE_CONTRACT_FILE, GET_CONTRACT_FILES, DELETE_CONTRACT_FILE } from '../../../../graphql/User/contract';\n\nconst { Option } = Select;\nconst catgeoryoptions =[\n    {\n        _id:\"others\",\n        name:\"Other\"\n    }, {\n        _id:\"Drawing\",\n        name:\"Drawing\"\n    }\n]\nconst ProjectImagesCategoryModel = (props) => {\n    let history = useHistory();\n    const [image_detail, set_image_detail] = useState({});\n    const [ContractJobFileUpload, { }] = useMutation(UPDATE_CONTRACT_FILE)\n    const { getFieldDecorator } = props.form;\n\n    useEffect(() => {\n        set_image_detail(props.image_comman_data)\n    }, [props])\n\n    const submitData = async () => {\n        props.form.validateFields(async (err, values) => {\n            console.log(\"next -> values\", values)\n            if (!err) {\n                values['_id'] = image_detail['_id'];\n                console.log(\"submitData -> values\", values)\n                if (image_detail['_id']) {\n                    let final_data = await ContractJobFileUpload({ variables: values })\n                    if(final_data.data.ContractJobFileUpload.status===\"success\"){\n                        props.modelReturnFuncion()\n                    }\n                }\n            }\n        })\n    }\n    return (\n        <>\n            <Form name=\"contract_image_update\">\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Project Category\">\n                            {getFieldDecorator(\"category\", {\n                                initialValue: image_detail?.doc_category,\n                                rules: [{ required: true }]\n                            })( <Select\n                                size={\"large\"} \n                                placeholder=\"Select a image category\"\n                                allowClear\n                            >\n                                {catgeoryoptions.map(item => (\n                                    <Option value={item['_id']}>{item['name']}</Option>\n                                ))}\n                            </Select>)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Project Tage\">\n                            {getFieldDecorator(\"image_tag\", {\n                                initialValue: image_detail?.image_tag,\n                                rules: [{ required: true }]\n                            })(<Input size={\"large\"} className=\"\" />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <div className=\"steps-action justify-content-between d-flex\">\n                    <Button type=\"primary\" className=\"w-50\" block onClick={() => submitData()}>\n                        <div className=\"normal_font_size\">Submit</div>\n                    </Button>\n                </div>\n            </Form>\n        </>\n    )\n};\nexport default Form.create()(ProjectImagesCategoryModel);\n"],"sourceRoot":""}