{"version":3,"sources":["image/sac.png","component/User/HomePage/ChooseJobCategory.js"],"names":["module","exports","content_data","ChooseJobCategory","props","useMutation","UPDATE_CONTRACT","update_contract","datas","loading","useContext","HomeContext","console","log","history","useReactRouter","gopage","pagetype","a","input_data","localStorage","getItem","JSON","parse","_id","budget","category_id","current_id","category_type","comman_data","state","type","variables","final_data","data","status","push","pathname","Alert_msg","gutter","span","className","onClick"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,iC,qLCSrCC,EACK,wBADLA,EAEK,YAFLA,EAGK,kBAiFIC,UA9EW,SAACC,GACvB,MAAsDC,YAAYC,KAAlE,mBAAOC,EAAP,KACMC,GADN,KAA0BC,QACZC,qBAAWC,MACzBC,QAAQC,IAAI,mCAAoCL,GAChD,IAAQM,EAAYC,MAAZD,QACFE,EAAM,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACXN,QAAQC,IAAIT,GACK,aAAba,EAFO,wBAGHE,EAAa,GACbC,aAAaC,QAAQ,UACrBF,EAAU,QAAcG,KAAKC,MAAMH,aAAaC,QAAQ,SAASG,KAErEL,EAAU,cAAmB,GAC7BA,EAAU,IAAS,EACnBA,EAAU,IAAS,EACnBA,EAAU,cAAkB,EAC5BA,EAAU,cAAmB,CAC7B,CACIM,OAAO,EACPC,YAAYtB,EAAMuB,WAClBC,cAAcxB,EAAMyB,YAAYC,MAAMC,OAEtCX,aAAaC,QAAQ,aAAwD,oBAAlCD,aAAaC,QAAQ,aAA8D,aAAlCD,aAAaC,QAAQ,YACjHF,EAAU,oBAA0BC,aAAaC,QAAQ,YAIzDF,EAAU,oBAA0B,KAtBjC,UAyBgBZ,EAAgB,CAAEyB,UAAWb,IAzB7C,QA0BwC,aAD3Cc,EAzBG,QA0BQC,KAAK3B,gBAAgB4B,OAChCrB,EAAQsB,KAAK,CAAEC,SAAS,qBAAD,OAAuBJ,EAAWC,KAAK3B,gBAAgBiB,OAI9Ec,YAAUL,EAAWC,KAAK3B,iBA/BvB,wBAkCPO,EAAQsB,KAAKhC,EAAMyB,aAlCZ,4CAAH,sDAsCZ,OACI,oCACI,kBAAC,IAAD,CAAKU,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,KAAM,IACP,yBAAKC,UAAU,gEAAgEvC,KAGvF,kBAAC,IAAD,CAAKqC,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,KAAM,IACP,yBAAKC,UAAU,gEACX,kBAAC,IAAD,CAAQV,KAAK,UAAUU,UAAU,OAAOC,QAAS,WAAQ1B,EAAO,gBAC5D,6BAAMd,OAKtB,kBAAC,IAAD,CAAKqC,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,KAAM,IACP,yBAAKC,UAAU,gEAAf,QAKR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKD,KAAM,IACP,yBAAKC,UAAU,gEACX,kBAAC,IAAD,CAAQV,KAAK,UAAUU,UAAU,OAAOC,QAAS,WAAQ1B,EAAO,cAC5D,6BAAMd","file":"static/js/32.926b1785.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sac.27ec6dac.png\";","import React, { useState ,useMemo,useContext} from 'react'\r\nimport { Row, Col, Icon, Button, Input } from 'antd';\r\nimport main from '../../../image/sac.png';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport useReactRouter from 'use-react-router';\r\nimport { Alert_msg } from \"../../Comman/alert_msg\";\r\nimport {HomeContext} from '../../context/Location';\r\nimport { UPDATE_CONTRACT, GET_CONTRACT } from '../../../graphql/User/contract';\r\n\r\nconst content_data = {\r\n    data1: \"Tell us what you need\",\r\n    data2: \"ON-DEMAND\",\r\n    data3: \"Post a contract\",\r\n\r\n}\r\nconst ChooseJobCategory = (props) => {\r\n    const [update_contract, { loading: removeLoading }] = useMutation(UPDATE_CONTRACT)\r\n    const datas = useContext(HomeContext);\r\n    console.log(\"ChooseJobCategory -> comman_data\", datas)\r\n    const { history } = useReactRouter();\r\n    const gopage = async(pagetype) => {\r\n        console.log(props)\r\n        if (pagetype === \"contract\") {\r\n            var input_data = {}\r\n            if (localStorage.getItem('user')) {\r\n                input_data[\"user_id\"] = JSON.parse(localStorage.getItem(\"user\"))._id\r\n            }\r\n            input_data['location_code']= \"\"\r\n            input_data['lat']= 0.0\r\n            input_data['lng']= 0.0\r\n            input_data['current_page']=-1\r\n            input_data['contract_data']= [\r\n            {\r\n                budget:0,\r\n                category_id:props.current_id,\r\n                category_type:props.comman_data.state.type\r\n            }]\r\n            if (localStorage.getItem('currency') && typeof localStorage.getItem('currency')!=\"undefined\" && localStorage.getItem('currency')!=\"undefined\") {\r\n                input_data[\"local_location_code\"] = localStorage.getItem('currency'); \r\n            }\r\n            else\r\n            {\r\n                input_data[\"local_location_code\"] = \"IN\"; \r\n            }\r\n            \r\n            let final_data = await update_contract({ variables: input_data });\r\n            if (final_data.data.update_contract.status === \"success\") {\r\n                history.push({ pathname: `/contract_booking/${final_data.data.update_contract._id}` })\r\n            }\r\n            else\r\n            {\r\n                Alert_msg(final_data.data.update_contract)\r\n            }\r\n        } else {\r\n            history.push(props.comman_data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 40]}>\r\n                <Col span={24}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">{content_data['data1']}</div>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 32]}>\r\n                <Col span={24}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\r\n                        <Button type=\"primary\" className='w-50' onClick={() => { gopage(\"individual\") }}>\r\n                            <div>{content_data['data2']}</div>\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 32]}>\r\n                <Col span={24}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\r\n                        or\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\r\n                        <Button type=\"primary\" className='w-50' onClick={() => { gopage(\"contract\") }}>\r\n                            <div>{content_data['data3']}</div>\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default ChooseJobCategory;\r\n"],"sourceRoot":""}