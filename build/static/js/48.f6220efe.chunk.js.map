{"version":3,"sources":["component/Comman/PlaceComplete.js"],"names":["PlaceComplete","props","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_useState3","_useState4","address","set_address","handleChange","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","value","wrap","_context","prev","next","stop","_x","apply","this","arguments","handleSelect","_ref2","_callee3","_context3","geocodeByAddress","then","_ref3","_callee2","results","_context2","getLatLng","latLng","address_components","map","index","types","PlaceCompleteFunction","home_page_city","long_name","center","lat","lng","_x3","catch","error","console","_x2","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","react_places_autocomplete__WEBPACK_IMPORTED_MODULE_4___default","onChange","onSelect","_ref4","getInputProps","suggestions","getSuggestionItemProps","loading","className","placeholder","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"wKAuEeA,UAlEO,SAACC,GACnB,IAAAC,EAA6CC,mBAAS,SAAtDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACAK,GADAH,EAAA,GAAAA,EAAA,GAC+BD,mBAAS,KAAxCK,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAAOE,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GAEMG,EAAY,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjBZ,EAAYQ,GADK,wBAAAE,EAAAG,SAAAN,MAAH,gBAAAO,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,GAGZC,EAAY,eAAAC,EAAAxB,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAAG,SAAAc,EAAMrB,GAAN,OAAAK,EAAAC,EAAAI,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OACjBZ,EAAYD,GACZuB,2BAAiBvB,GACZwB,KADL,eAAAC,EAAA7B,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KACU,SAAAmB,EAAMC,GAAN,OAAAtB,EAAAC,EAAAI,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACIgB,oBAAUF,EAAQ,IAAIH,KAAK,SAAAM,GAC7BH,EAAQ,GAAGI,mBAAmBC,IAAI,SAACvB,EAAOwB,GACf,aAAnBxB,EAAMyB,MAAM,IACZ1C,EAAM2C,sBAAsB,CAAEC,eAAgB3B,EAAM4B,UAAWC,OAAQ,CAACR,EAAOS,IAAKT,EAAOU,WAJrG,wBAAAZ,EAAAd,SAAAY,MADV,gBAAAe,GAAA,OAAAhB,EAAAT,MAAAC,KAAAC,YAAA,IAUOwB,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,KAZ5B,wBAAArB,EAAAR,SAAAO,MAAH,gBAAAwB,GAAA,OAAAzB,EAAAJ,MAAAC,KAAAC,YAAA,GAelB,OACI4B,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KAEIF,EAAAxC,EAAAyC,cAACE,EAAA3C,EAAD,CACIG,MAAOT,EACPkD,SAAUhD,EACViD,SAAUhC,GAET,SAAAiC,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,YAAaC,EAA/BH,EAA+BG,uBAAwBC,EAAvDJ,EAAuDI,QAAvD,OACGV,EAAAxC,EAAAyC,cAAA,OAAKU,UAAU,qBACXX,EAAAxC,EAAAyC,cAAA,QACQM,EAAc,CACdK,YAAa,WACbD,UAAW,mDAGnBX,EAAAxC,EAAAyC,cAAA,OAAKU,UAAU,mCACVD,GAAWV,EAAAxC,EAAAyC,cAAA,OAAKU,UAAU,gBAAf,cACXH,EAAYtB,IAAI,SAAA2B,GACb,IAAMF,EAAYE,EAAWC,OACvB,0BACA,kBAEAC,EAAQF,EAAWC,OACnB,CAAEE,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WAC5C,OACIjB,EAAAxC,EAAAyC,cAAA,MACQQ,EAAuBI,EAAY,CACnCF,YACAI,UAGJf,EAAAxC,EAAAyC,cAAA,YAAOY,EAAWK","file":"static/js/48.f6220efe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n} from 'react-places-autocomplete';\nconst PlaceComplete = (props) => {\n    const [home_page_city, set_home_page_city] = useState('kenya')\n    const [address, set_address] = useState(\"\")\n\n    const handleChange = async value => {\n        set_address(value);\n    };\n    const handleSelect = async address => {\n        set_address(address);\n        geocodeByAddress(address)\n            .then(async results => {\n                await getLatLng(results[0]).then(latLng => {\n                    results[0].address_components.map((value, index) => {\n                        if (value.types[0] === \"locality\") {\n                            props.PlaceCompleteFunction({ home_page_city: value.long_name, center: [latLng.lat, latLng.lng] });\n                        }\n                    });\n\n                })\n            }).catch(error => console.error('Error', error));\n    };\n\n    return (\n        <>\n\n            <PlacesAutocomplete\n                value={address}\n                onChange={handleChange}\n                onSelect={handleSelect}\n            >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                    <div className=\"position-relative\">\n                        <input\n                            {...getInputProps({\n                                placeholder: 'Location',\n                                className: 'location-search-input jiffy_input place_input',\n                            })}\n                        />\n                        <div className=\"autocomplete-dropdown-container\">\n                            {loading && <div className=\"suggest_load\">Loading...</div>}\n                            {suggestions.map(suggestion => {\n                                const className = suggestion.active\n                                    ? 'suggestion-item--active'\n                                    : 'suggestion-item';\n                                // inline style for demonstration purpose\n                                const style = suggestion.active\n                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                return (\n                                    <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                            className,\n                                            style,\n                                        })}\n                                    >\n                                        <span>{suggestion.description}</span>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                )}\n            </PlacesAutocomplete>\n        </>\n    )\n}\nexport default PlaceComplete;\n"],"sourceRoot":""}