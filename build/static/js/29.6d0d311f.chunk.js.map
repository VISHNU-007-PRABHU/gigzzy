{"version":3,"sources":["component/User/Login/CompanyWorkerDetail.js"],"names":["Option","Select","content_data","Form","create","props","useHistory","_useState","useState","_useState2","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","emails","_useState3","_useState4","Address","setAddress","result","useQuery","USER_EMAIL_QUERY","form","SearchEmail","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","value","variable_data","wrap","_context","prev","next","email","$regex","$options","role","refetch","variables","stop","_x","apply","this","arguments","console","log","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","antd__WEBPACK_IMPORTED_MODULE_5__","gutter","antd__WEBPACK_IMPORTED_MODULE_6__","span","className","lg","antd__WEBPACK_IMPORTED_MODULE_7__","onClick","user_id","visible","antd__WEBPACK_IMPORTED_MODULE_8__","Item","label","getFieldDecorator","rules","required","antd__WEBPACK_IMPORTED_MODULE_4__","mode","style","width","placeholder","onSearch","map","mailData","key","antd__WEBPACK_IMPORTED_MODULE_9__","onChange","e","concat","target","checked","antd__WEBPACK_IMPORTED_MODULE_10__","type"],"mappings":"8OAOQA,EAAWC,IAAXD,OACFE,EACK,kBADLA,EAEK,OAFLA,EAGK,WAmFIC,cAAKC,QAALD,CAjFmB,SAACE,GACjBC,uBAAd,IACAC,EAA4BC,mBAAS,IAArCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GACAI,GADAJ,EAAA,GAC8BD,oBAAS,IAAvCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAOE,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GACMG,EAASC,YAASC,KAChBC,EAASf,EAATe,KAMFC,EAAW,eAAAC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZL,IACIC,EAAgB,CAAEK,MAAS,CAAEC,OAAQ,KAAOP,EAAQ,KAAMQ,SAAU,KAAOC,KAAM,GACrFpB,EAAOqB,QAAQ,CAAEC,UAAW,CAAEV,oBAHlB,wBAAAE,EAAAS,SAAAb,MAAH,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAC,KAAAC,YAAA,GAOjB,OADAC,QAAQC,IAAI,wBAAyB7B,GAEjC8B,EAAAtB,EAAAuB,cAAAD,EAAAtB,EAAAwB,SAAA,KACIF,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,KACdJ,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKC,KAAM,IACPN,EAAAtB,EAAAuB,cAAA,OAAKM,UAAU,gEAAgEpD,KAGvF6C,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,KACIH,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKC,KAAM,IACPN,EAAAtB,EAAAuB,cAAA,OAAKM,UAAU,sBACXP,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,KACIH,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKE,UAAU,GAAGC,GAAI,IAClBR,EAAAtB,EAAAuB,cAACQ,EAAA,EAAD,CAAMC,QAAS,WAAQzC,GAAW,KAAlC,WAGA+B,EAAAtB,EAAAuB,cAACjC,EAAD,CAAS2C,QAAS,GAAIC,QAAS5C,MAGvCgC,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,KACIH,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKE,UAAU,GAAGC,GAAI,IAClBR,EAAAtB,EAAAuB,cAACY,EAAA,EAAKC,KAAN,CAAWC,MAAM,mBACZ1C,EAAK2C,kBAAkB,iBAAkB,CAEtCC,MAAO,CAAC,CAAEC,UAAU,KAFvB7C,CAGE2B,EAAAtB,EAAAuB,cAACkB,EAAA,EAAD,CAAQZ,UAAU,eAAea,KAAK,OAAOC,MAAO,CAAEC,MAAO,QAAUC,YAAY,0BAA0BC,SAAUlD,GACrHT,EAAO4D,IAAI,SAAAC,GAAQ,OAChB1B,EAAAtB,EAAAuB,cAAChD,EAAD,CAAQ0E,IAAKD,EAASvC,OAAQuC,EAASvC,cAM3Da,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,KACIH,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKE,UAAU,GAAGC,GAAI,IAClBR,EAAAtB,EAAAuB,cAACY,EAAA,EAAKC,KAAN,CAAWC,MAAM,IACZ1C,EAAK2C,kBAAkB,OAAQ,CAC5BC,MAAO,CAAC,CAAEC,UAAU,KADvB7C,CAEE2B,EAAAtB,EAAAuB,cAAC2B,EAAA,EAAD,CAAUC,SAhD5B,SAACC,GACdhC,QAAQC,IAAR,aAAAgC,OAAyBD,EAAEE,OAAOC,YA+CH,oBAO3BjC,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,KACIH,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKE,UAAU,GAAGD,KAAM,IACpBN,EAAAtB,EAAAuB,cAAA,OAAKM,UAAU,gEACXP,EAAAtB,EAAAuB,cAACiC,EAAA,EAAD,CAAQC,KAAK,UAAU5B,UAAU,QAC7BP,EAAAtB,EAAAuB,cAAA,WAAM9C,MAIlB6C,EAAAtB,EAAAuB,cAACI,EAAA,EAAD,CAAKE,UAAU,GAAGD,KAAM,IACpBN,EAAAtB,EAAAuB,cAAA,OAAKM,UAAU,gEACXP,EAAAtB,EAAAuB,cAACiC,EAAA,EAAD,CAAQC,KAAK,UAAU5B,UAAU,QAC7BP,EAAAtB,EAAAuB,cAAA,WAAM9C","file":"static/js/29.6d0d311f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Button, Form, Card, Checkbox, Select } from 'antd';\nimport message from 'antd/lib/message';\nimport { useHistory } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { USER_EMAIL_QUERY } from '../../../graphql/Admin/user';\n\nconst { Option } = Select;\nconst content_data = {\n    data1: \"ADD YOUR WORKER\",\n    data2: \"BACK\",\n    data3: \"REGISTER\",\n}\nconst CompanyRegistrationDetail = (props) => {\n    let history = useHistory();\n    const [emails, setemails] = useState([]);\n    const [Address, setAddress] = useState(false);\n    const result = useQuery(USER_EMAIL_QUERY);\n    const { form } = props;\n\n    const onChange = (e) => {\n        console.log(`checked = ${e.target.checked}`);\n    }\n\n    const SearchEmail = async (value) => {\n        if (value) {\n            let variable_data = { 'email': { $regex: '.*' + value + '.*', $options: 'i' }, role: 2 }\n            result.refetch({ variables: { variable_data } })\n        }\n    }\n    console.log(\"SearchEmail -> result\", result)\n    return (\n        <>\n            <Row gutter={[16, 32]}>\n                <Col span={24}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">{content_data['data1']}</div>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24}>\n                    <div className=\"company_reg_detail\">\n                        <Row>\n                            <Col className=\"\" lg={24}>\n                                <Card onClick={() => { setAddress(true) }}>\n                                    Address\n                                </Card>\n                                <Address user_id={\"\"} visible={Address} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"\" lg={24}>\n                                <Form.Item label=\"Add your worker\">\n                                    {form.getFieldDecorator(\"provider_email\", {\n                                        // initialValue: this.state.update_data.address,\n                                        rules: [{ required: false }]\n                                    })(<Select className=\"input_border\" mode=\"tags\" style={{ width: '100%' }} placeholder=\"Enter your worker email\" onSearch={SearchEmail}>\n                                        {emails.map(mailData => (\n                                            <Option key={mailData.email}>{mailData.email}</Option>\n                                        ))}\n                                    </Select>)}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"\" lg={24}>\n                                <Form.Item label=\"\">\n                                    {form.getFieldDecorator(\"name\", {\n                                        rules: [{ required: true }]\n                                    })(<Checkbox onChange={onChange}>Add label</Checkbox>)}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"\" span={12}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className=\"w-50\">\n                            <div>{content_data['data2']}</div>\n                        </Button>\n                    </div>\n                </Col>\n                <Col className=\"\" span={12}>\n                    <div className=\"normal_font_size primary_color d-flex justify-content-center\">\n                        <Button type=\"primary\" className=\"w-50\">\n                            <div>{content_data['data3']}</div>\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    )\n};\nexport default Form.create()(CompanyRegistrationDetail);\n"],"sourceRoot":""}