{"version":3,"sources":["component/User/Book/contract/ProjectBudget.js"],"names":["TextArea","Input","Collapse","Panel","Form","create","props","useState","show_terms","setshow_terms","contract_detail_data","set_contract_detail","form","customform","useEffect","terms_condition","timeline_type_addon","timeline_type","span","className","Item","label","getFieldDecorator","initialValue","budget","size","addonAfter","date","Date","current_timeline","timeline","setMonth","getMonth","parseInt","toISOString","slice","replace","timeline_description","onChange","e","target","value","Group","md","offset","onClick","type","rows"],"mappings":"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","file":"static/js/52.3fdec432.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Input, Radio, Collapse, Button, Icon } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { TextArea } = Input;\r\nconst { Panel } = Collapse;\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nconst customPanelStyle = {\r\n    background: 'white',\r\n    borderRadius: 4,\r\n    marginBottom: 24,\r\n    border: 0,\r\n    overflow: 'hidden',\r\n};\r\n\r\nconst options1 = [\r\n    { label: 'one', value: 'One time' },\r\n    { label: 'year', value: 'Yearly' },\r\n];\r\n\r\nconst options2 = [\r\n    { label: 'monthly', value: 'Monthly' },\r\n    { label: 'recurring', value: 'Recurring' },\r\n];\r\n\r\nconst ProjectBudget = (props) => {\r\n    const [show_terms, setshow_terms] = useState(false);\r\n    const [contract_detail_data, set_contract_detail] = useState({});\r\n    var form = props.customform\r\n    useEffect(() => {\r\n        set_contract_detail(props.contract_detail_data)\r\n        if(contract_detail_data.terms_condition!=\"\")\r\n        {\r\n            setshow_terms(true);\r\n        }\r\n    }, [props])\r\n\r\n    const onChange1 = e => {\r\n        contract_detail_data.timeline_type = e.target.value\r\n    };\r\n    const onChange_timeline = e => {\r\n        contract_detail_data.timeline = e.target.value\r\n    };\r\n    \r\n    const timeline_description = () => {\r\n        var date = new Date();\r\n        var current_timeline=contract_detail_data?.timeline || 0\r\n        switch (contract_detail_data?.timeline_type) {\r\n            case \"1\":\r\n                return \"One time Job\"\r\n                break;\r\n            case \"2\":\r\n                var newDate = new Date(date.setMonth(date.getMonth()+parseInt(current_timeline)));\r\n                return \"Job will be repeating every month until \"+newDate.toISOString().slice(0, 10).replace('T',' ')\r\n                break;\r\n            case \"3\":\r\n                var newDate = new Date(date.setMonth(date.getMonth()+parseInt(current_timeline)*12));\r\n                return \"Job will be repeating every year until \"+newDate.toISOString().slice(0, 10).replace('T',' ')\r\n                break;\r\n            case \"4\":\r\n                return \"Job will be repeating every months until you stop the recurring\"\r\n                break;\r\n            default:\r\n                return \"One time Job\"\r\n                break;\r\n        }\r\n    }\r\n    const timeline_type_addon = ()=>{\r\n        switch (contract_detail_data?.timeline_type) {\r\n            case \"1\":\r\n                return \"\"\r\n                break;\r\n            case \"2\":\r\n                return \"Months\"\r\n                break;\r\n            case \"3\":\r\n                return \"Years\"\r\n                break;\r\n            case \"4\":\r\n                return \"\"\r\n                break;\r\n            default:\r\n                return \"\"\r\n                break;\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <label className=\"d-flex w-100\">\r\n                        <span className=\"ant-form-item-required font-weight-bold\">Project Budget</span>\r\n                    </label>\r\n                    <Form.Item label=\"\">\r\n                        {form.getFieldDecorator(\"budget\", {\r\n                            initialValue: contract_detail_data?.budget,\r\n                        })(<Input size={\"large\"} className=\"\" addonAfter=\"Ksh\" />)}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <label className=\"d-flex w-100\">\r\n                <span className=\"ant-form-item-required font-weight-bold\">Project Timeline</span>\r\n            </label>\r\n            <small>{timeline_description()}</small>\r\n            {timeline_type_addon()!=\"\" && \r\n            <Row>\r\n                <Col span={24}>\r\n                    <Form.Item label=\"\">\r\n                        {form.getFieldDecorator(\"timeline\", {\r\n                            initialValue: contract_detail_data?.timeline,\r\n                        })(<Input size={\"large\"} className=\"\" onChange={onChange_timeline}  addonAfter={timeline_type_addon()} />)}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            }\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Form.Item className=\"mb-0\" label=\"\">\r\n                        {form.getFieldDecorator(\"timeline_type\", {\r\n                            initialValue: contract_detail_data?.timeline_type,\r\n                        })(\r\n                            <Radio.Group value={contract_detail_data?.timeline_type} onChange={onChange1} size={'large'} className=\"d-flex w-100\">\r\n                                <Col md={{span:18,offset:6}}>\r\n                                    <Row className=\"font-weight-bold\" >\r\n                                        <Col className=\"py-2\" md={{span:12,offset: 0}}>\r\n                                            <Radio value={\"1\"}>One time</Radio>\r\n                                        </Col>\r\n                                        <Col className=\"py-2\" md={{span:12,offset: 0}}>\r\n                                            <Radio value={\"2\"}>Monthly</Radio>\r\n                                        </Col>\r\n                                        <Col className=\"py-2\" md={{span:12,offset: 0}}>\r\n                                            <Radio value={\"3\"}>Yearly</Radio>\r\n                                        </Col>\r\n                                        <Col className=\"py-2\" md={{span:12,offset: 0}}>\r\n                                            <Radio value={\"4\"}>Recurring</Radio>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Radio.Group>\r\n                        )}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n                <Col span={24}>\r\n                    <Button onClick={() => { setshow_terms(!show_terms) }} type=\"link\" className=\"primary_color normal_font_size p-0\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <Icon type=\"plus-circle\" />\r\n                            <div className=\"px-3\"> Add Terms and Conditions</div>\r\n                        </div>\r\n                    </Button>\r\n                    <div className={show_terms ? '' : 'd-none'}>\r\n                        <Form.Item label=\"\">\r\n                            {form.getFieldDecorator(\"terms_condition\", {\r\n                                initialValue: contract_detail_data?.terms_condition,\r\n                            })(<TextArea size={\"large\"} rows={6} />)}\r\n                        </Form.Item>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n};\r\nexport default Form.create()(ProjectBudget);\r\n"],"sourceRoot":""}