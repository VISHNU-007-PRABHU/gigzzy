{"version":3,"sources":["graphql/User/milestone.js","component/User/Book/milestone/update/CreateDynamicMilestone.js"],"names":["GET_MILESTONE_PAGINATION","gql","_templateObject","Object","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","UPDATE_MILESTONE","_templateObject2","_templateObject3","Option","Select","TextArea","Input","Form","create","props","form","_useState","useState","_useState2","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","form_count","set_form_count","_useMutation","useMutation","_useMutation2","loading","useEffect","test_data","i","count","push","file","image","title","description","error_title","remove_from","index","after_remove_milestone","splice","normFile","e","Array","isArray","fileList","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","antd__WEBPACK_IMPORTED_MODULE_6__","antd__WEBPACK_IMPORTED_MODULE_7__","name","className","map","field","console","log","gutter","antd__WEBPACK_IMPORTED_MODULE_8__","span","length","antd__WEBPACK_IMPORTED_MODULE_9__","onConfirm","antd__WEBPACK_IMPORTED_MODULE_10__","type","Item","label","key","getFieldDecorator","concat","keys","initialValue","rules","required","antd__WEBPACK_IMPORTED_MODULE_5__","size","rows","min","addonAfter","antd__WEBPACK_IMPORTED_MODULE_11__","antd__WEBPACK_IMPORTED_MODULE_4__","defaultValue","value","valuePropName","getValueFromEvent","antd__WEBPACK_IMPORTED_MODULE_12__","multiple","listType","action","antd__WEBPACK_IMPORTED_MODULE_13__","block","onClick","validateFields","_ref","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_waioz_gigzzy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","err","values","milestone_data","input_data","final_data","wrap","_context","prev","next","_","inner_file","originFileObj","abrupt","sent","data","update_milestone","status","Alert_msg","msg","stop","_x","_x2","apply","this","arguments","save_milestone"],"mappings":"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","file":"static/js/30.e01b6811.chunk.js","sourcesContent":["\nimport gql from \"graphql-tag\";\n\nexport const GET_MILESTONE_PAGINATION = gql`\n    query GETMILESTONEPAGINATION($_id:ID,$contract_id:ID,$biding_id:ID,$location_code:String){\n        get_biding_milestone(_id:$_id,contract_id:$contract_id,biding_id:$biding_id){\n                _id\n                budget(code:$location_code)\n                ref: milestone_ref\n                created_at\n                user_id\n                contract_id\n                timeline\n                timeline_type\n                payment_option(code:$location_code)\n                booking_status\n        }\n    }\n`;\n\nexport const GET_MILESTONE_DETAIL = gql`\n    query GETMILESTONEDETAIL($_id:ID,$contract_id:ID,$biding_id:ID){\n        get_biding_milestone_detail(_id:$_id,contract_id:$contract_id,biding_id:$biding_id){\n            _id\n            budget\n            ref: milestone_ref\n            created_at\n            user_id\n            contract_id\n            description\n            timeline\n            timeline_type\n        }\n    }\n`\n\n\nexport const UPDATE_MILESTONE = gql`\nmutation UPDATEMILESTONE($option:String  \n    $_id:ID\n    $user_id: String\n    $provider_id:ID\n    $biding_id:ID\n    $contract_id:ID\n    $file:[Upload]\n    $milestone_data:JSON){ \n    update_milestone(\n        option:$option  \n        _id:$_id\n        user_id: $user_id\n        provider_id:$provider_id\n        biding_id:$biding_id\n        contract_id:$contract_id\n        file:$file\n        milestone_data:$milestone_data\n  ) {\n    msg\n    status\n  }\n}`","import React, { Suspense, useState, useEffect } from 'react'\nimport { Row, Col, Form, InputNumber, Input, Icon, Select, Button, Popconfirm, Upload } from 'antd';\nimport { Alert_msg } from '../../../../Comman/alert_msg';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { UPDATE_MILESTONE } from '../../../../../graphql/User/milestone';\nimport _ from 'lodash'\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst sights = [{\n    value: 'days',\n    label: \"Days\"\n}, {\n    value: 'months',\n    label: \"Month\"\n}, {\n    value: 'years',\n    label: \"Years\"\n}\n]\nconst CreateMilestone = (props) => {\n    var form = props.form\n\n    const [form_count, set_form_count] = useState([]);\n    const [update_milestone, { loading: updateLoading }] = useMutation(UPDATE_MILESTONE)\n\n    useEffect(() => {\n        let test_data = []\n        for (let i = 1; i <= props.count; i++) {\n            test_data.push({ count: i, file: [], image: [], title: \"\", description: \"\", error_title: false })\n        }\n        set_form_count(test_data)\n    }, [props])\n\n    const remove_from = (index) => {\n        let after_remove_milestone = form_count.splice(index, 1);\n        set_form_count(after_remove_milestone)\n    }\n    const save_milestone = (field, i) => {\n        console.log(\"save_milestone -> form\")\n        form.validateFields(async (err, values) => {\n            if (!err) {\n                let file = []\n                let milestone_data = {}\n\n                if (_.size(values[`file_${i}`])) {\n                    file = values[`file_${i}`].map(inner_file => {\n                        return inner_file.originFileObj\n                    })\n                }\n                milestone_data[\"title\"] = values[`title_${i}`]\n                milestone_data[\"description\"] = values[`description_${i}`]\n                milestone_data[\"timeline\"] = values[`timeline_${i}`]\n                milestone_data[\"timeline_type\"] = values[`timeline_type_${i}`]\n                milestone_data[\"budget\"] = values[`budget_${i}`]\n\n                if( milestone_data[\"budget\"]  && milestone_data[\"title\"] &&  milestone_data[\"timeline_type\"] && milestone_data[\"description\"] &&  milestone_data[\"timeline\"]){\n                    let input_data = {\n                        milestone_data\n                    }\n                    if (_.size(file)) {\n                        input_data['file'] = file\n                    }\n    \n    \n                    console.log(\"save_milestone -> input_data\", input_data)\n                    return false\n                    let final_data = await update_milestone({ variables: input_data })\n                    if (final_data.data.update_milestone.status === \"success\") {\n                        Alert_msg(final_data.data.update_milestone)\n                        // fetch_milestone()\n                    }\n                }else{\n                    Alert_msg({ msg: \"Please fill all the field\", status: \"failed\" })\n                }\n            \n            } else {\n                Alert_msg({ msg: \"Milestone update failed\", status: \"failed\" })\n            }\n        })\n    }\n\n    const normFile = e => {\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n    return (\n        <>\n            <Row>\n\n                <Form name=\"nested-milestone\" className=\"\">\n                    {(form_count || []).map((field, i) => {\n                        console.log(\"CreateMilestone -> field\", field)\n                        return (\n                            <>\n                                <Row gutter={[16, 0]}>\n                                    <Col span={24}>\n                                        <div className='d-flex w-100 justify-content-between normal_font_size pb-3'>\n                                            <div> Milestone {i + 1}</div>\n                                            {form_count.length >= 2 && <Popconfirm title=\"Sure to delete milestone ?\" onConfirm={() => remove_from(i)}>\n                                                <div className='cursor_point d-flex justify-content-between align-items-center text-danger'><Icon className=\"px-3\" type=\"delete\" /> <div>Remove</div></div>\n                                            </Popconfirm>\n                                            }\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row gutter={[16, 0]}>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Title\" key={i}>\n                                            {form.getFieldDecorator(`title_${i}`, {\n                                                keys: \"\",\n                                                initialValue: \"\",\n                                                rules: [{ required: field['error_title'] ? true : false }]\n\n                                            })(<Input size={\"large\"} className=\"w-100\" />)}\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={[16, 0]}>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Description\" key={i}>\n                                            {form.getFieldDecorator(`description_${i}`, {\n                                                keys: \"\",\n                                                initialValue: \"\",\n                                            })(<TextArea size={\"large\"} rows={6} />)}\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={[16, 0]}>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Amount to be released\" key={i}>\n                                            {form.getFieldDecorator(`budget_${i}`, {\n                                                keys: \"\",\n                                                initialValue: \"\",\n                                            })(<Input type=\"number\" size={\"large\"} className=\"w-100\" min={1}  addonAfter=\"KSH\"/>)}\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={6}>\n                                        <Form.Item label=\"Duration\" key={i}>\n                                            {form.getFieldDecorator(`timeline_${i}`, {\n                                                keys: \"\",\n                                                initialValue: \"\",\n                                            })(\n                                                <InputNumber type=\"number\" size={\"large\"} className=\"w-100\" min={1} />\n                                            )}\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={6}>\n                                        <Form.Item label=\"time type\" key={i}>\n                                            {form.getFieldDecorator(`timeline_type_${i}`, {\n                                                keys: \"\",\n                                                initialValue: \"\",\n                                            })(<Select defaultValue=\"days\" size={\"large\"} className=\"w-100\">\n                                                <Option value=\"days\">Days</Option>\n                                                <Option value=\"months\">Months</Option>\n                                                <Option value=\"years\">Years</Option>\n                                            </Select>\n                                            )}\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={[16, 0]}>\n                                    <Col span={24}>\n                                        <div>\n                                            <Form.Item label=\"\">\n                                                {form.getFieldDecorator(`file_${i}`, {\n                                                    rules: [],\n                                                    valuePropName: 'fileList',\n                                                    getValueFromEvent: normFile,\n                                                })(\n                                                    <Upload\n                                                        name=\"logo\"\n                                                        multiple={true}\n                                                        listType=\"picture-card\"\n                                                        action=\"/upload.do\"\n                                                    >\n                                                        <div>\n                                                            <Icon type=\"plus\" />\n                                                            <div className=\"ant-upload-text\">Upload</div>\n                                                        </div>\n                                                    </Upload>)}\n                                            </Form.Item>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row gutter={[16, 0]}>\n                                    <Col span={12}>\n                                        {form_count.length >= 2 && <Popconfirm title=\"Sure to delete milestone ?\" onConfirm={() => remove_from(i)}>\n                                            <Button size={\"large\"} block className=\"normal_font_size\">\n                                                <div className=\"px-2\"> Cancel</div>\n                                            </Button>\n                                        </Popconfirm>\n                                        }\n                                    </Col>\n                                    <Col span={12}>\n                                        <Button size={\"large\"} block onClick={() => { save_milestone(field, i) }} className=\"bg-gradient-primary text-white normal_font_size\">\n                                            <div className=\"px-2\"> Done</div>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </>)\n                    })}\n                </Form>\n            </Row>\n\n        </>\n    )\n};\nexport default Form.create()(CreateMilestone);\n"],"sourceRoot":""}