{"version":3,"sources":["../node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","image/Gigzzy.png","graphql/Admin/static.js","component/User/Layout/UserHeader.js"],"names":["__webpack_require__","d","__webpack_exports__","useMutation","useQuery","_apollo_react_common__WEBPACK_IMPORTED_MODULE_0__","tslib__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","apollo_client__WEBPACK_IMPORTED_MODULE_3__","_wry_equality__WEBPACK_IMPORTED_MODULE_4__","ts_invariant__WEBPACK_IMPORTED_MODULE_5__","OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","Object","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","QueryData","_super","_a","forceUpdate","_this","call","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","execute","skip","query","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","children","opts","displayName","onCompleted","onError","partialRefetch","fetchPolicy","obs","watchQuery","renderPromises","registerSSRObservable","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","bind","updatedOptions","variables","ssrLoading","addQueryPromise","updateCurrentData","prepareObservableQueryOptions","Query","metadata","reactComponent","observableQueryFields","observable","refetch","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","initializeObservableQuery","getSSRObservable","observableQueryOptions","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","error","_error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","assign","create","currentResult","partial","errors","length","graphQLErrors","keys","setTimeout","resetQueryStoreErrors","unsubscribe","useBaseQuery","x","tick","queryDataRef","current","queryData","memoFn","key","ref","value","useDeepMemo","MutationData","setResult","mutation","Mutation","mostRecentMutationId","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","previousResult","mutationDataRef","mutationData","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","endSubscription","startSubscription","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","module","exports","p","ADD_STATIC","gql","_templateObject","UPDATE_STATIC","_templateObject2","GET_STATIC","_templateObject3","DELETE_STATIC","_templateObject4","FIND_STATIC","_templateObject5","USER_STATIC","_templateObject6","ADD_SETTING","_templateObject7","GET_SETTING","_templateObject8","ADD_PAYOUT","_templateObject9","GET_PAYOUT_SETTING","_templateObject10","UPDATE_SITE_IMG","_templateObject11","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","antd__WEBPACK_IMPORTED_MODULE_4__","antd__WEBPACK_IMPORTED_MODULE_5__","antd__WEBPACK_IMPORTED_MODULE_6__","antd__WEBPACK_IMPORTED_MODULE_7__","antd__WEBPACK_IMPORTED_MODULE_8__","antd__WEBPACK_IMPORTED_MODULE_9__","_image_Gigzzy_png__WEBPACK_IMPORTED_MODULE_10__","_image_Gigzzy_png__WEBPACK_IMPORTED_MODULE_10___default","use_react_router__WEBPACK_IMPORTED_MODULE_11__","use_react_router__WEBPACK_IMPORTED_MODULE_11___default","_graphql_Admin_static__WEBPACK_IMPORTED_MODULE_12__","_apollo_react_hooks__WEBPACK_IMPORTED_MODULE_13__","use_mobile_detect_hook__WEBPACK_IMPORTED_MODULE_14__","use_mobile_detect_hook__WEBPACK_IMPORTED_MODULE_14___default","Header","Layout","UserHeader","useLocation","detectMobile","useMobileDetect","_useQuery","history","useReactRouter","a","createElement","className","style","backgroundColor","width","height","open_new_tab","url","concat","console","log","window","open","menu","Item","localStorage","getItem","onClick","removeItem","without_login_menu","Divider","theme","twoToneColor","src","main","alt","overlay","placement","shape","icon","verticalAlign","parse","img_url","isMobile","Fragment","color"],"mappings":"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","file":"static/js/95.58ffb23b.chunk.js","sourcesContent":["import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __rest, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions) {\n    if (!equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        forceUpdate = _a.forceUpdate;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.forceUpdate();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.forceUpdate = forceUpdate;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    if (this.getOptions().skip) return false;\n\n    var _a = this.getOptions(),\n        children = _a.children,\n        ssr = _a.ssr,\n        displayName = _a.displayName,\n        skip = _a.skip,\n        onCompleted = _a.onCompleted,\n        onError = _a.onError,\n        partialRefetch = _a.partialRefetch,\n        opts = __rest(_a, [\"children\", \"ssr\", \"displayName\", \"skip\", \"onCompleted\", \"onError\", \"partialRefetch\"]);\n\n    var fetchPolicy = opts.fetchPolicy;\n    if (ssr === false) return false;\n\n    if (fetchPolicy === 'network-only' || fetchPolicy === 'cache-and-network') {\n      fetchPolicy = 'cache-first';\n    }\n\n    var obs = this.refreshClient().client.watchQuery(__assign({}, opts, {\n      fetchPolicy: fetchPolicy\n    }));\n\n    if (this.context && this.context.renderPromises) {\n      this.context.renderPromises.registerSSRObservable(obs, this.getOptions());\n    }\n\n    var currentResult = this.currentObservable.query.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    var lazyOptions = this.lazyOptions || {};\n\n    var updatedOptions = __assign({}, options, {\n      variables: __assign({}, options.variables, lazyOptions.variables),\n      context: __assign({}, options.context, lazyOptions.context)\n    });\n\n    if (this.runLazy) {\n      delete updatedOptions.skip;\n    }\n\n    return updatedOptions;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var result;\n    var ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: {}\n    };\n\n    if (this.context && this.context.renderPromises) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult);\n\n      if (!result) {\n        result = ssrLoading;\n      }\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.updateCurrentData = function () {\n    if (this.isMounted) {\n      this.forceUpdate();\n    }\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    this.verifyDocumentType(this.getOptions().query, DocumentType.Query);\n    var displayName = this.getOptions().displayName || 'Query';\n    return __assign({}, this.getOptions(), {\n      displayName: displayName,\n      context: this.getOptions().context || {},\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.observableQueryFields = function (observable) {\n    return {\n      variables: observable.variables,\n      refetch: observable.refetch.bind(observable),\n      fetchMore: observable.fetchMore.bind(observable),\n      updateQuery: observable.updateQuery.bind(observable),\n      startPolling: observable.startPolling.bind(observable),\n      stopPolling: observable.stopPolling.bind(observable),\n      subscribeToMore: observable.subscribeToMore.bind(observable)\n    };\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    if (this.context && this.context.renderPromises) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign({}, observableQueryOptions, {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(observableQueryOptions);\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n    }\n\n    var newObservableQueryOptions = __assign({}, this.prepareObservableQueryOptions(), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions).catch(function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n\n        if (_this.previousData.result && _this.previousData.result.loading === loading && _this.previousData.result.networkStatus === networkStatus && equal(_this.previousData.result.data, data || {})) {\n          return;\n        }\n\n        _this.updateCurrentData();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n\n        _this.updateCurrentData();\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var _this = this;\n\n    var result = {\n      data: Object.create(null)\n    };\n    Object.assign(result, this.observableQueryFields(this.currentObservable.query));\n\n    if (this.getOptions().skip) {\n      result = __assign({}, result, {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n      data = data || Object.create(null);\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      Object.assign(result, {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result ? this.previousData.result.data : {};\n        Object.assign(result.data, previousData, data);\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = this.getOptions().partialRefetch;\n\n        if (partialRefetch && Object.keys(data).length === 0 && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        Object.assign(result.data, data);\n      }\n    }\n\n    setTimeout(function () {\n      _this.currentObservable.query.resetQueryStoreErrors();\n    });\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var _a = this.currentObservable.query.getCurrentResult(),\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n\n  if (!queryDataRef.current) {\n    queryDataRef.current = new QueryData({\n      options: updatedOptions,\n      context: context,\n      forceUpdate: forceUpdate\n    });\n  }\n\n  var queryData = queryDataRef.current;\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n  var memo = {\n    options: updatedOptions,\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [result]);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    var _this = this;\n\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n\n    var runMutation = function runMutation(options) {\n      return _this.runMutation(options);\n    };\n\n    return [runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.runMutation = function (mutationFunctionOptions) {\n    var _this = this;\n\n    if (mutationFunctionOptions === void 0) {\n      mutationFunctionOptions = {};\n    }\n\n    this.onMutationStart();\n    var mutationId = this.generateNewMutationId();\n    return this.mutate(mutationFunctionOptions).then(function (response) {\n      _this.onMutationCompleted(response, mutationId);\n\n      return response;\n    }).catch(function (error) {\n      _this.onMutationError(error, mutationId);\n\n      if (!_this.getOptions().onError) throw error;\n    });\n  };\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables))) {\n      this.endSubscription();\n      delete this.currentObservable.query;\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign({}, currentResult, {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    loading: true,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };","module.exports = __webpack_public_path__ + \"static/media/Gigzzy.b988be48.png\";","import gql from \"graphql-tag\";\n\nexport const ADD_STATIC = gql`\n    mutation ADDSTATIC($page_name: String,$page_code: String,$description: String,$title:String) {\n        add_static(page_name:$page_name,page_code:$page_code,description:$description,title:$title){\n            info\n        }\n    }\n`;\n\nexport const UPDATE_STATIC = gql`\n    mutation update_STATIC($_id:ID,$page_name:String,$page_code: String,$description: String,$title:String){\n        update_static(_id:$_id,page_name:$page_name,page_code:$page_code,description:$description,title:$title){\n            info\n        }\n    }\n`;\n\nexport const GET_STATIC = gql`\n query GETSTATIC($limit: Int,$page:Int) {\n    get_static(limit:$limit,page:$page) {\n        pageInfo{\n            totalDocs\n        }\n        data{\n            _id\n            page_name\n            page_code\n            description\n            title\n        }\n    }\n}\n`;\n\nexport const DELETE_STATIC = gql`\n    mutation DELETESTATIC($_id: ID)  {\n    deleteStatic(_id:$_id){\n        msg   \n        status      \n    }\n}`\n\n\n\nexport const FIND_STATIC = gql`\nquery FINDSTATIC($_id:ID) {\n    static(_id:$_id) {\n        _id\n        page_name\n        page_code\n        title\n        description\n    }\n}\n`;\n\nexport const USER_STATIC = gql`\nquery USERSTATIC($_id:ID,$page_code:String) {\n    static(_id:$_id,page_code:$page_code) {\n        _id\n        page_name\n        page_code\n        title\n        description\n    }\n}\n`;\n\nexport const ADD_SETTING = gql`\n    mutation ADDSETTING($_id:ID,\n            $site_name: String,\n            $site_email: String,\n            $copyrights_content: String,\n            $playstore_link: String,\n            $appstore_link: String,\n            $contact_number: String,\n            $contact_email: String,\n            $site_currency: String) {\n        add_site_detail(_id:$_id,\n            site_name: $site_name,\n            site_email: $site_email,\n            copyrights_content: $copyrights_content,\n            playstore_link: $playstore_link,\n            appstore_link: $appstore_link,\n            contact_number: $contact_number,\n            contact_email: $contact_email,\n            site_currency: $site_currency){\n            msg\n            status\n        }\n    }\n`;\nexport const GET_SETTING = gql`\nquery GTESETTING {\n    site_setting_detail {\n        site_email\n        site_name\n        site_name\n        site_email\n        copyrights_content,\n        playstore_link\n        appstore_link\n        contact_number\n        contact_email\n        site_currency\n        img_logo\n        img_icon\n        site_logo\n        site_icon\n    }\n}\n`;\n\n\nexport const ADD_PAYOUT = gql`\n    mutation ADDPAYOUT($_id:ID,\n            $user_name:String,\n            $password:String,\n            $secret_key:String,\n            $client_key:String,\n            $signature:String,\n            $payout_status:Int) {\n            add_payout_detail( _id:$_id,\n                user_name:$user_name,\n                password:$password,\n                secret_key:$secret_key,\n                client_key:$client_key,\n                signature:$signature,\n                payout_status:$payout_status){\n                    user_name,\n                    password\n                    secret_key\n                    client_key\n                    signature\n                    payout_status\n                    msg\n                    status\n                }\n    }\n`;\n\nexport const GET_PAYOUT_SETTING = gql`\nquery GTEPAYOUTSETTING {\n    payout_setting_detail {\n        user_name,\n        password\n        secret_key\n        client_key\n        signature\n        payout_status\n        msg\n        status\n    }\n}\n`;\n\n\n\nexport const UPDATE_SITE_IMG = gql`\n    mutation UPDATESITEIMG($_id: ID,$file:Upload,$option:Int)  {\n        update_site_img(_id:$_id,file:$file,option:$option){\n        msg         \n        status\n        img_icon\n        img_logo\n        site_logo\n        site_icon\n    }\n}`\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n\nimport {\n  Layout,\n  Row,\n  Button,\n  Col,\n  Avatar,\n  Menu,\n  Icon,\n  Dropdown,\n  Skeleton,\n} from \"antd\";\nimport main from \"../../../image/Gigzzy.png\";\nimport useReactRouter from \"use-react-router\";\nimport { GET_SETTING } from \"../../../graphql/Admin/static\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport useMobileDetect from 'use-mobile-detect-hook';\n\nconst { Header } = Layout;\n\nconst UserHeader = () => {\n  const location = useLocation();\n  const detectMobile = useMobileDetect();\n  const { loading, error, data } = useQuery(GET_SETTING, {});\n  const { history } = useReactRouter();\n  if (loading)\n    return (\n      <p\n        className=\"container mt-2\"\n        style={{ backgroundColor: \"#eae5e5\", width: \"100%\", height: \"30px\" }}\n      ></p>\n    );\n  const logout = () => {\n    if (localStorage.getItem(\"userLogin\") === \"success\") {\n      localStorage.removeItem(\"userLogin\");\n      localStorage.removeItem(\"user\");\n      history.push(\"/login\");\n    }\n  };\n  const open_new_tab = (data) => {\n    const url = `${data}`;\n    console.log(url);\n    window.open(url);\n  };\n\n\n  const menu = (\n    <Menu>\n      <Menu.Item\n        className={\n          localStorage.getItem(\"userLogin\") === \"success\"\n            ? \"d-flex align-items-center px-3\"\n            : \"d-none\"\n        }\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        <Icon type=\"home\" />\n        Home\n      </Menu.Item>\n      <Menu.Item\n        className={\n          localStorage.getItem(\"userLogin\") === \"success\"\n            ? \"d-flex align-items-center px-3\"\n            : \"d-none\"\n        }\n        onClick={() => {\n          history.push(\"/profile\");\n        }}\n      >\n        <Icon type=\"user\" />\n        Profile\n      </Menu.Item>\n      <Menu.Item\n        className={\n          localStorage.getItem(\"userLogin\") === \"success\"\n            ? \"d-flex align-items-center px-3\"\n            : \"d-none\"\n        }\n        onClick={() => {\n          history.push(\"/bookings\");\n        }}\n      >\n        <Icon type=\"book\" />\n        Bookings\n      </Menu.Item>\n      <Menu.Item\n        className={\n          localStorage.getItem(\"userLogin\") === \"success\"\n            ? \"d-flex align-items-center px-3\"\n            : \"d-none\"\n        }\n        onClick={() => {\n          open_new_tab(\"/static_page/about_us\");\n        }}\n      >\n        <Icon type=\"setting\" />\n        Help & Support\n      </Menu.Item>\n      <Menu.Item\n        className={\n          localStorage.getItem(\"userLogin\") === \"success\"\n            ? \"d-flex align-items-center px-3\"\n            : \"d-none\"\n        }\n        onClick={() => {\n          open_new_tab(\"/static_page/terms\");\n        }}\n      >\n        <Icon type=\"info-circle\" />\n        Terms & Conditions\n      </Menu.Item>\n      <Menu.Item\n        className={\n          localStorage.getItem(\"userLogin\") === \"success\"\n            ? \"d-flex align-items-center px-3\"\n            : \"d-none\"\n        }\n        onClick={logout}\n      >\n        <Icon type=\"logout\" />\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  const without_login_menu = (\n    <Menu>\n      <Menu.Item\n        className=\"d-flex align-items-center px-3\"\n        onClick={() => { history.push('/howlearnmore') }}>\n        <Icon type=\"question-circle\" />\n        How it works\n      </Menu.Item>\n      <Menu.Item\n        className=\"d-flex align-items-center px-3\"\n        onClick={() => { history.push('/login') }}>\n        <Icon type=\"login\" />\n        Customer Login\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        className=\"d-flex align-items-center px-3\"\n        onClick={() => { open_new_tab('/provider_login') }}>\n        <Icon type=\"shop\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\n        <span className=\"primary_color\">Service Provider Login</span>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div>\n      <Header className=\"white user_header px-2\">\n        <Row>\n          <Col>\n            <img\n              src={main}\n              height=\"75\"\n              width=\"120\"\n              alt={\"Jiffy\"}\n              className=\"object_fit cursor_point\"\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            />\n\n            <div className=\"float-right cursor_point\">\n              {localStorage.getItem(\"userLogin\") === \"success\" ? (\n                <Dropdown overlay={menu} placement=\"bottomRight\">\n                  <Avatar\n                    shape=\"circle\"\n                    className=\"ant-dropdown-link avatar_shadow\"\n                    icon={\n                      <Icon type=\"user\" style={{ verticalAlign: \"baseline\" }} />\n                    }\n                    src={\n                      JSON.parse(localStorage.getItem(\"user\"))\n                        ? JSON.parse(localStorage.getItem(\"user\")).img_url\n                        : \"\"\n                    }\n                  />\n                </Dropdown>\n              ) : (\n                detectMobile.isMobile() ?\n                  <Dropdown overlay={without_login_menu} placement=\"bottomRight\">\n                    <Avatar\n                      shape=\"circle\"\n                      className=\"ant-dropdown-link avatar_shadow\"\n                      icon={\n                        <Icon type=\"menu-unfold\" style={{ verticalAlign: \"baseline\" }} />\n                      }\n                    />\n                  </Dropdown> :\n                  <>\n                    <div>\n                      <Button onClick={() => { history.push(\"/howlearnmore\"); }} className=\"mx-1\">\n                        How it works\n                      </Button>\n                      <Button onClick={() => { history.push(\"/login\"); }} className=\"mx-1\" style={{ backgroundColor: \"black\", color: \"white\" }}>\n                        Customer Login\n                      </Button>\n                      <Button onClick={() => { open_new_tab(\"/provider_login\"); }} className=\"mx-1\">\n                        Service Provider Login\n                      </Button>\n                    </div>\n                  </>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </Header>\n    </div>\n  );\n};\n\nexport default UserHeader;\n"],"sourceRoot":""}