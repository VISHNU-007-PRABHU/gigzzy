{"version":3,"sources":["component/Admin/Company/CompanyWorker_Table.js","component/Admin/Company/CompanyWorker.js"],"names":["CompanyWorkerTable","state","modalVisible","dataSource","update_data","update","loading","loading_img","imageUrl","file","previewVisible","previewImage","view_img","pagination","pageSize","total","current","simple","handleTableChange","a","pager","setState","client","query","GET_COMPANY","variables","limit","page","fetchPolicy","then","result","data","get_company_detail","pageInfo","totalDocs","fetch_find_company","datas","provider_search","register_status","register_link_status","props","$or","$ne","company_id","match","params","id","get_parent_company_provider","handleDelete","_id","mutate","mutation","DELETE_COMPANY_PROVIDER","error","Alert_msg","deleteCompanyProvider","status","onFilter_Ref","target","value","$regex","$options","this","columns","title","render","text","record","email","color","created_at","length","className","permission","type","theme","twoToneColor","onConfirm","size","placeholder","onKeyUp","event","rowKey","React","Form","create","withRouter","TabPane","Layout","Content","Tabs","Company","collapsed","onToggle","val","console","log","tab","key","Component"],"mappings":"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","file":"static/js/8.247002e5.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Table, Modal, Form, Avatar, Popconfirm, Tag, Icon, Switch } from \"antd\";\r\nimport { GET_COMPANY, DELETE_COMPANY_PROVIDER } from '../../../graphql/Admin/user';\r\nimport { client } from \"../../../apollo\";\r\nimport '../../../scss/template.scss';\r\nimport { Alert_msg } from '../../Comman/alert_msg';\r\nimport Search from \"antd/lib/input/Search\";\r\nimport RoleView, { RoleViewFunction } from '../../Comman/roles_permission_view'\r\nclass CompanyWorkerTable extends React.Component {\r\n    state = {\r\n        modalVisible: false,\r\n        dataSource: [],\r\n        update_data: {},\r\n        update: 0,\r\n        loading: false,\r\n        loading_img: false,\r\n        imageUrl: '',\r\n        file: {},\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        view_img: '',\r\n        pagination: {\r\n            pageSize: 10,\r\n            total: 0,\r\n            current: 1,\r\n            simple: true,\r\n        },\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n            this.fetch_find_company();\r\n        }\r\n    }\r\n    handleTableChange = async pagination => {\r\n        const pager = { ...pagination };\r\n        pager.current = pagination.current;\r\n        this.setState({ loading: true });\r\n        await client.query({\r\n            query: GET_COMPANY,\r\n            variables: { limit: pager.pageSize, page: pager.current },\r\n            fetchPolicy: 'no-cache',\r\n        }).then(result => {\r\n            const pagination = { ...this.state.pagination };\r\n            pagination.total = result.data.get_company_detail.pageInfo.totalDocs;\r\n            pagination.current = result.data.get_company_detail.pageInfo.page;\r\n            this.setState({ pagination, loading: false, dataSource: result.data.get_company_detail.data });\r\n        });\r\n    };\r\n\r\n    fetch_find_company = async (datas) => {\r\n        let provider_search = {\r\n            register_status: \"success\",\r\n            register_link_status: \"accepted\"\r\n        }\r\n        if (this.props['type'] === \"inactive\"){\r\n            provider_search = {\r\n                $or: [\r\n                    {\r\n                        register_link_status: { $ne: \"success\" }\r\n                    },\r\n                    {\r\n                        register_status: { $ne: \"accepted\" }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        if(datas){\r\n            provider_search = {...provider_search,...datas}\r\n        }\r\n        await client.query({\r\n            query: GET_COMPANY,\r\n            variables: { company_id: this.props.match.params.id,provider_search },\r\n            fetchPolicy: 'no-cache',\r\n        }).then(result => {\r\n            this.setState({\r\n                update: 1,\r\n                dataSource: result.data.get_company_detail.data[0].get_parent_company_provider,\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    handleDelete = async (_id) => {\r\n        await client.mutate({\r\n            mutation: DELETE_COMPANY_PROVIDER,\r\n            variables: { _id: _id },\r\n        }).then((result, loading, error) => {\r\n            Alert_msg(result.data.deleteCompanyProvider);\r\n            if (result.data.deleteCompanyProvider.status === 'success') {\r\n                this.fetch_find_company();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    onFilter_Ref = async (data) => {\r\n        if (data.target.value) {\r\n            var datas = { 'email': { $regex: '.*' + data.target.value + '.*', $options: 'i' } }\r\n            this.fetch_find_company(datas);\r\n        } else {\r\n            this.fetch_find_company();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'Email',\r\n                render: (text, record) => {\r\n                    return <span title=\"Email\">{record.email}</span>;\r\n                }\r\n            },\r\n            {\r\n                title: 'Link Sent Date',\r\n                render: (text, record) => {\r\n                    return <span title=\"Link Sent Date\">{<Tag color=\"geekblue\">{record.created_at}</Tag>}</span>;\r\n                },\r\n            },\r\n            {\r\n                title: 'Register Link Status',\r\n                render: (text, record) => {\r\n                    return <span title=\"Register Link Status\">{<Tag color=\"geekblue\">{record.register_link_status}</Tag>}</span>;\r\n                },\r\n            },\r\n            {\r\n                title: 'Provider Register Status',\r\n                render: (text, record) => {\r\n                    return <span title=\"Provider Register Status\">{<Tag color=\"geekblue\">{record.register_status}</Tag>}</span>;\r\n                },\r\n            },\r\n            {\r\n                title: 'View',\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <span title=\"....\" className=\"d-flex justify-content-around\">\r\n                            <RoleView permission=\"\">\r\n                                <span className=\"cursor_point\">\r\n                                    <Icon type=\"eye\" theme=\"twoTone\" twoToneColor=\"#52c41a\"  className={this.props['type'] === \"inactive\" ? 'd-none':'mx-3 f_25'} />\r\n                                </span>\r\n                            </RoleView>\r\n                            \r\n                            <RoleView permission=\"\" >\r\n                                <Popconfirm title=\"Sure to delete this worker ?\" onConfirm={() => this.handleDelete(record._id)}>\r\n                                    <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#52c41a\" className='f_25' />\r\n                                </Popconfirm>\r\n                            </RoleView>\r\n                        </span>\r\n                    ) : null,\r\n            },\r\n        ];\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className='mb-3'>\r\n                    <Search className='' size=\"large\" placeholder=\"Search Worker Email\" onKeyUp={(event) => { this.onFilter_Ref(event) }} loading={false} />\r\n\r\n                </div>\r\n                <div id=\"no-more-tables\">\r\n                    <Table\r\n                        className='table_shadow'\r\n                        rowKey={record => record.id}\r\n                        loading={this.state.loading}\r\n                        dataSource={this.state.dataSource}\r\n                        columns={columns}\r\n                        pagination={false}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(withRouter(CompanyWorkerTable));","\r\nimport React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport '../../../scss/template.scss';\r\nimport AdminSider from '../Layout/AdminSider';\r\nimport AdminHeader from '../Layout/AdminHeader';\r\nimport CompanyWorkerTable from './CompanyWorker_Table'\r\nimport { Layout, Tabs, Button } from 'antd';\r\nimport RoleView, { RoleViewFunction } from '../../Comman/roles_permission_view'\r\nconst { Content } = Layout;\r\nconst { TabPane } = Tabs;\r\nclass Company extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onToggle = (val) => {\r\n        console.log(val);\r\n        this.setState({\r\n            collapsed: val,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Tabs>\r\n                <TabPane tab=\"Active workers\" key=\"1\">\r\n                    <CompanyWorkerTable type=\"active\" />\r\n                </TabPane>\r\n                <TabPane tab=\"Pending workers\" key=\"2\">\r\n                    <CompanyWorkerTable type=\"inactive\" />\r\n                </TabPane>\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Company;\r\n"],"sourceRoot":""}