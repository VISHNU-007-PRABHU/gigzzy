{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","component/User/Book/contract/ProjectImages.js"],"names":["_objectDestructuringEmpty","obj","TypeError","FileUpload","Input","TextArea","React","lazy","ProjectImagesCategoryModel","Form","create","props","useHistory","useState","hide_common_upload","set_hide_common_upload","VisibleImageCategory","set_VisibleImageCategory","get_all_images_data","set_get_all_images","image_comman_data","set_image_comman_data","useMutation","UPDATE_CONTRACT_FILE","ContractJobFileUpload","DELETE_CONTRACT_FILE","DeleteContractJobFile","get_contract_files","useQuery","GET_CONTRACT_FILES","form","customform","useEffect","fetch_data","a","refetch","contract_id","localStorage","getItem","data","length","onFileUpload","files","category","input_data","file","variables","status","showImageModel","modelReturnFuncion","delete_contract_images","_id","console","log","className","span","Item","label","getFieldDecorator","rules","valuePropName","custom_content","custom_sub_content","custom_class","gutter","map","all_image_items","title","custom_category","images","image_data","md","loading","src","small_image","image_tag","onClick","type","onConfirm","footer","centered","visible","onCancel","fallback","active"],"mappings":"kGAAe,SAASA,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCADvC,mC,gNCMMC,GADeC,IAAbC,SACWC,IAAMC,MAAK,kBAAM,oCAC9BC,EAA6BF,IAAMC,MAAK,kBAAM,mCAuHrCE,cAAKC,QAALD,EArHO,SAACE,GACLC,uBAAd,IACA,EAAqDC,oBAAS,GAA9D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAAkCF,mBAAS,IAA3C,mBACA,GADA,UACyDA,oBAAS,IAAlE,mBAAOG,EAAP,KAA6BC,EAA7B,KAEA,EAAkDJ,mBAAS,IAA3D,mBAAOK,EAAP,KAA4BC,EAA5B,KACA,EAAmDN,mBAAS,IAA5D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAA8BR,oBAAS,GAAvC,mBACA,GADA,UACqCS,YAAYC,MAAjD,mBAAOC,EAAP,uBACA,MAAqCF,YAAYG,KAAjD,mBAAOC,EAAP,uBACA,IAAMC,EAAqBC,YAASC,KAC9BC,EAAOnB,EAAMoB,WAEnBC,qBAAU,WACFrB,EAAMG,oBACNC,EAAuBJ,EAAMG,oBAEjCmB,MACD,CAACtB,IAEJ,IAAMsB,EAAU,uCAAG,4BAAAC,EAAA,sEACEP,EAAmBQ,QAAQ,CAAEC,YAAaC,aAAaC,QAAQ,yBADjE,QACXC,EADW,SAEHA,EAAKA,MAAQA,EAAKA,KAAKZ,oBAAsBY,EAAKA,KAAKZ,mBAAmBa,QAClFrB,EAAmBoB,GAAQA,EAAKA,KAAKZ,oBAH1B,2CAAH,qDAMVc,EAAY,uCAAG,WAAOC,GAAP,6BAAAR,EAAA,6DAAcS,EAAd,+BAAyB,SACtCC,EAAa,CACbR,YAAaC,aAAaC,QAAQ,uBAClCO,KAAM,CAACH,IAEPC,IACAC,EAAU,SAAeD,GANZ,SASMnB,EAAsB,CAAEsB,UAAWF,IATzC,OAUoC,YAVpC,OAUFL,KAAKf,sBAAsBuB,QACtCd,IAXa,2CAAH,sDAcZe,EAAc,uCAAG,WAAOT,GAAP,SAAAL,EAAA,sDACnBb,EAAsBkB,GACtBtB,GAAyB,GAFN,2CAAH,sDAIdgC,EAAkB,uCAAG,sBAAAf,EAAA,sDACvBjB,GAAyB,GACzBgB,IAFuB,2CAAH,qDAIlBiB,EAAsB,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,6DACvBU,EAAa,CAAEO,OADQ,SAEHzB,EAAsB,CAAEoB,UAAWF,IAFhC,cAG3BQ,QAAQC,IAAI,uCAAwCT,GACpDX,IAJ2B,2CAAH,sDAM5B,OACI,oCACI,kBAAC,IAAD,CAAKqB,UAAWxC,EAAqB,SAAW,IAC5C,kBAAC,IAAD,CAAKyC,KAAM,IACP,kBAAC,IAAKC,KAAN,CAAWC,MAAM,IACZ3B,EAAK4B,kBAAkB,OAAQ,CAC5BC,MAAO,GACPC,cAAe,YAFlB9B,CAIG,kBAAC3B,EAAD,CACI0D,eAAe,kBACfpB,aAAcA,EACdqB,mBAAmB,+CACnBC,aAAa,yDAJjB,OAOR,sEAGR,kBAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKT,KAAM,IAEHrC,EAAoBsB,OAAStB,EAAoB+C,KAAI,SAAAC,GACjD,OACI,kBAAC,IAAD,CAAMZ,UAAU,oDAAoDa,MAAO,yBAAKb,UAAU,qDACtF,6BAAMY,EAAe,KACrB,yBAAKZ,UAAU,UACX,kBAACnD,EAAD,CAAYsC,aAAcA,EAAc2B,gBAAiBF,EAAe,IAASH,aAAa,8BAKlG,kBAAC,IAAD,CAAKC,OAAQ,GACZE,EAAgBG,OAAOJ,KAAI,SAAAK,GACxB,OACA,kBAAC,IAAD,CAAKC,GAAI,CAAChB,KAAK,GAAID,UAAU,uDACzB,yBAAKA,UAAU,SACX,yBAAKkB,QAAQ,OAAOlB,UAAU,kDAAkDmB,IAAKH,EAAWI,cAChG,0BAAMpB,UAAU,aAAagB,EAAWK,WACxC,0BAAMrB,UAAU,OAAOsB,QAAS,WAAQ5B,EAAesB,KAAe,kBAAC,IAAD,CAAMO,KAAK,OAAOvB,UAAU,UAClG,kBAAC,IAAD,CAAYa,MAAM,8BAA8BW,UAAW,kBAAM5B,EAAuBoB,EAAWnB,OAC/F,0BAAMG,UAAU,UAAS,kBAAC,IAAD,CAAMuB,KAAK,SAASvB,UAAU,qBAS9E,uCAIjB,kBAAC,IAAD,CAAOyB,OAAQ,KAAMC,UAAQ,EAACC,QAASjE,EAAsBkE,SAAU,WAAQjE,GAAyB,KACpG,kBAAC,WAAD,CAAUkE,SAAU,kBAAC,IAAD,CAAUC,QAAM,KAChC,kBAAC5E,EAAD,CAA4ByC,mBAAoBA,EAAoB7B,kBAAmBA","file":"static/js/29.ad1891d4.chunk.js","sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React, { useState, useEffect, Suspense } from 'react'\r\nimport { Row, Col, Form, Input, Card, Icon, Popconfirm, Modal, Skeleton } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { UPDATE_CONTRACT_FILE, GET_CONTRACT_FILES, DELETE_CONTRACT_FILE } from '../../../../graphql/User/contract';\r\nconst { TextArea } = Input;\r\nconst FileUpload = React.lazy(() => import('../../../Comman/FileUpload'));\r\nconst ProjectImagesCategoryModel = React.lazy(() => import('./ProjectImageCategoryModel'));\r\n\r\nconst ProjectImages = (props) => {\r\n    let history = useHistory();\r\n    const [hide_common_upload, set_hide_common_upload] = useState(false);\r\n    const [user_data, setuser_data] = useState(\"\");\r\n    const [VisibleImageCategory, set_VisibleImageCategory] = useState(false);\r\n\r\n    const [get_all_images_data, set_get_all_images] = useState([])\r\n    const [image_comman_data, set_image_comman_data] = useState({})\r\n    const [loading, setloading] = useState(false);\r\n    const [ContractJobFileUpload, { }] = useMutation(UPDATE_CONTRACT_FILE)\r\n    const [DeleteContractJobFile, { }] = useMutation(DELETE_CONTRACT_FILE)\r\n    const get_contract_files = useQuery(GET_CONTRACT_FILES)\r\n    const form = props.customform;\r\n\r\n    useEffect(() => {\r\n        if (props.hide_common_upload) {\r\n            set_hide_common_upload(props.hide_common_upload)\r\n        }\r\n        fetch_data();\r\n    }, [props])\r\n\r\n    const fetch_data = async () => {\r\n        let data = await get_contract_files.refetch({ contract_id: localStorage.getItem('current_contract_id') })\r\n        if (data && data.data && data.data.get_contract_files && data.data.get_contract_files.length) {\r\n            set_get_all_images(data && data.data.get_contract_files)\r\n        }\r\n    }\r\n    const onFileUpload = async (files, category = \"others\") => {\r\n        let input_data = {\r\n            contract_id: localStorage.getItem('current_contract_id'),\r\n            file: [files],\r\n        }\r\n        if (category) {\r\n            input_data['category'] = category\r\n        }\r\n    \r\n        let final_data = await ContractJobFileUpload({ variables: input_data })\r\n        if (final_data.data.ContractJobFileUpload.status === \"success\") {\r\n            fetch_data()\r\n        }\r\n    }\r\n    const showImageModel = async (data) => {\r\n        set_image_comman_data(data)\r\n        set_VisibleImageCategory(true)\r\n    }\r\n    const modelReturnFuncion = async () => {\r\n        set_VisibleImageCategory(false)\r\n        fetch_data()\r\n    }\r\n    const delete_contract_images = async (_id) => {\r\n        let input_data = { _id }\r\n        let remove_data = await DeleteContractJobFile({ variables: input_data })\r\n        console.log(\"delete_contract_images -> input_data\", input_data)\r\n        fetch_data()\r\n    }\r\n    return (\r\n        <>\r\n            <Row className={hide_common_upload ? \"d-none\" : \"\"}>\r\n                <Col span={24}>\r\n                    <Form.Item label=\"\">\r\n                        {form.getFieldDecorator('file', {\r\n                            rules: [],\r\n                            valuePropName: 'fileList',\r\n                        })(\r\n                            <FileUpload\r\n                                custom_content=\"Upload document\"\r\n                                onFileUpload={onFileUpload}\r\n                                custom_sub_content=\"Upload your documents and site images etc..,\"\r\n                                custom_class=\"avatar-uploader d-flex justify-content-center px_view\"> </FileUpload>\r\n                        )}\r\n                    </Form.Item>\r\n                    <small>Supported File Formats : JPG, PNG</small>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 40]}>\r\n                <Col span={24}>\r\n                    {\r\n                        get_all_images_data.length ? get_all_images_data.map(all_image_items => {\r\n                            return (\r\n                                <Card className=\"mb-2 extra_radius_input document_section_contract\" title={<div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div>{all_image_items['_id']}</div>\r\n                                    <div className=\"d-flex\">\r\n                                        <FileUpload onFileUpload={onFileUpload} custom_category={all_image_items['_id']} custom_class=\"contract_header_images\"\r\n                                        ></FileUpload>\r\n                                    </div>\r\n                                </div>\r\n                                }>\r\n                                    <Row gutter={8}>\r\n                                    {all_image_items.images.map(image_data => {\r\n                                        return (\r\n                                        <Col md={{span:8}} className=\"gutter-row imgHolder position-relative cursor_point\">\r\n                                            <div className=\"h-100\">\r\n                                                <img loading=\"lazy\" className=\"rounded w-100 img_cover img-fluid loading h-100\" src={image_data.small_image} />\r\n                                                <span className=\"tags bold\">{image_data.image_tag}</span>\r\n                                                <span className=\"edit\" onClick={() => { showImageModel(image_data) }}><Icon type=\"edit\" className='f_25' /></span>\r\n                                                <Popconfirm title=\"Sure to delete this image ?\" onConfirm={() => delete_contract_images(image_data._id)}>\r\n                                                    <span className=\"delete\"><Icon type=\"delete\" className='f_25' /></span>\r\n                                                </Popconfirm>\r\n                                            </div>\r\n                                        </Col>\r\n                                        )\r\n                                    })}\r\n                                    </Row>\r\n                                </Card>\r\n                            )\r\n                        }) : <></>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Modal footer={null} centered visible={VisibleImageCategory} onCancel={() => { set_VisibleImageCategory(false) }}>\r\n                <Suspense fallback={<Skeleton active />}>\r\n                    <ProjectImagesCategoryModel modelReturnFuncion={modelReturnFuncion} image_comman_data={image_comman_data} />\r\n                </Suspense>\r\n            </Modal>\r\n        </>\r\n    )\r\n};\r\nexport default Form.create()(ProjectImages);\r\n"],"sourceRoot":""}